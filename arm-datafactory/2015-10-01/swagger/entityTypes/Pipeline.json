{
  "$schema": "http://json-schema.org/draft-04/schema",
  "definitions": {
    "Pipeline": {
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "../service.json#/definitions/DatasetResource"
          }
        },
        "linkedServices": {
          "type": "array",
          "items": {
            "$ref": "../service.json#/definitions/LinkedServiceResource"
          }
        },
        "parameters": {
          "$ref": "../service.json#/definitions/ParameterSetSpecification"
        }
      }
    },
    "Activity": {
      "discriminator": "type",
      "properties": {
        "name": {
          "description": "Activity name.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "description": "Activity description.",
          "type": "string"
        },
        "linkedService": {
          "$ref": "../service.json#/definitions/LinkedServiceReference"
        },
        "dependsOn": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Skipped",
                "Completed"
              ],
              "x-ms-enum": {
                "name": "ActivityState"
              }
            }
          }
        },
        "policy": {
          "type": "object"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "../service.json#/definitions/DatasetReference"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "../service.json#/definitions/DatasetReference"
          }
        }
      },
      "required": [
        "name",
        "type",
        "typeProperties"
      ]
    },
     "Copy": {
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {
        "typeProperties": {
          "properties": {
            "source": {
              "description": "Copy activity source.",
              "$ref": "#/definitions/CopySource"
            },
            "sink": {
              "description": "Copy activity sink.",
              "$ref": "#/definitions/CopySink"
            },
            "translator": {
              "description": "Copy activity translator. If not specificed, tabular translator is used.",
              "$ref": "#/definitions/CopyTranslator"
            },
            "enableStaging": {
              "x-ms-mark-object": true,
              "description": "Specifies whether to copy data via an interim staging. Default value is false.",
              "type": "boolean"
            },
            "stagingSettings": {
              "description": "Specifies interim staging settings when EnableStaging is true.",
              "$ref": "#/definitions/StagingSettings"
            },
            "parallelCopies": {
              "x-ms-mark-object": true,
              "description": "Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store.",
              "type": "integer",
              "minimum": 0
            },
            "cloudDataMovementUnits": {
              "x-ms-mark-object": true,
              "description": "Maximum number of cloud data movement units that can be used to perform this data movement.",
              "type": "integer",
              "minimum": 0
            }
          },
          "required": [
            "source",
            "sink"
          ]
        }
      }
    },
    "CopySource": {
      "discriminator": "type",
      "description": "A copy activity source.",
      "type": "object",
      "properties": {
        "type": {
          "x-ms-mark-object": true,
          "type": "string"
        },
        "sourceRetryCount": {
          "x-ms-mark-object": true,
          "description": "Source retry count.",
          "type": "integer"
        },
        "sourceRetryWait": {
          "x-ms-mark-object": true,
          "description": "Source retry wait.",
          "type": "string",
          "format": "duration"
        }
      },
      "required": [
        "type"
      ]
    },
    "BlobSource": {
      "description": "A copy activity blob source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "treatEmptyAsNull": {
          "x-ms-mark-object": true,
          "description": "Treat empty as null.",
          "type": "boolean"
        },
        "skipHeaderLineCount": {
          "x-ms-mark-object": true,
          "description": "Number of header lines to skip from each blob",
          "type": "integer"
        },
        "recursive": {
          "x-ms-mark-object": true,
          "description": "If true, files under the folder path will be read recursively.",
          "type": "boolean"
        }
      }
    },
    "SqlSource": {
      "description": "A copy activity SQL source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "x-ms-mark-object": true,
          "description": "SQL reader query.",
          "type": "string"
        },
        "sqlReaderStoredProcedureName": {
          "x-ms-mark-object": true,
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery.",
          "type": "string"
        },
        "storedProcedureParameters": {
          "x-ms-mark-object": true,
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object",
          "additionalProperties": {
            "allOf": [
              {
                "$ref": "#/definitions/StoredProcedureParameter"
              }
            ]
          }
        }
      }
    },
    "StoredProcedureParameter": {
      "description": "SQL stored procedure parameter.",
      "type": "object",
      "properties": {
        "value": {
          "x-ms-mark-object": true,
          "description": "Stored procedure parameter type.",
          "type": "string"
        },
        "type": {
          "description": "Stored procedure parameter type.",
          "$ref": "#/definitions/StoredProcedureParameterType"
        }
      },
      "required": [
        "value"
      ]
    },
    "StoredProcedureParameterType": {
      "description": "Stored procedure parameter type.",
      "type": "string",
      "enum": [
        "String",
        "Int",
        "Decimal",
        "Guid",
        "Boolean",
        "Date"
      ],
      "x-ms-enum": {
        "name": "StoredProcedureParameterType"
      }
    },
    "CopySink": {
      "discriminator": "type",
      "description": "A copy activity sink.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "writeBatchSize": {
          "x-ms-mark-object": true,
          "description": "Write batch size.",
          "type": "integer",
          "minimum": 0
        },
        "writeBatchTimeout": {
          "x-ms-mark-object": true,
          "description": "Write batch timeout.",
          "type": "string",
          "format": "duration"
        },
        "sinkRetryCount": {
          "x-ms-mark-object": true,
          "description": "Sink retry count.",
          "type": "integer"
        },
        "sinkRetryWait": {
          "x-ms-mark-object": true,
          "description": "Sink retry wait.",
          "type": "string",
          "format": "duration"
        }
      },
      "required": [
        "type"
      ]
    },
    "SqlDWSink": {
      "description": "A copy activity SQL data warehouse sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "sliceIdentifierColumnName": {
          "x-ms-mark-object": true,
          "description": "Name of the SQL column which is used to save slice identifier information, to support idempotent copy.",
          "type": "string"
        },
        "sqlWriterCleanupScript": {
          "x-ms-mark-object": true,
          "description": "SQL writer cleanup script.",
          "type": "string"
        },
        "allowPolyBase": {
          "x-ms-mark-object": true,
          "description": "Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable.",
          "type": "boolean"
        },
        "polyBaseSettings": {
          "description": "Specifies PolyBase-related settings when AllowPolyBase is true.",
          "$ref": "#/definitions/PolybaseSettings"
        }
      }
    },
    "PolybaseSettings": {
      "description": "PolyBase settings.",
      "type": "object",
      "properties": {
        "rejectType": {
          "x-ms-mark-object": true,
          "$ref": "#/definitions/PolybaseSettingsRejectType"
        },
        "rejectValue": {
          "x-ms-mark-object": true,
          "description": "Specifies the value or the percentage of rows that can be rejected before the query fails.",
          "type": "number",
          "minimum": 0
        },
        "rejectSampleValue": {
          "x-ms-mark-object": true,
          "description": "Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows.",
          "type": "integer",
          "minimum": 0
        },
        "useTypeDefault": {
          "x-ms-mark-object": true,
          "description": "Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file.",
          "type": "boolean"
        }
      }
    },
    "PolybaseSettingsRejectType": {
      "description": "Indicates whether the RejectValue property is specified as a literal value or a percentage.",
      "type": "string",
      "enum": [
        "value",
        "percentage"
      ],
      "x-ms-enum": {
        "name": "PolybaseSettingsRejectType"
      }
    },
    "StagingSettings": {
      "description": "Staging settings.",
      "type": "object",
      "properties": {
        "linkedService": {
          "$ref": "../service.json#/definitions/LinkedServiceReference"
        },
        "path": {
          "x-ms-mark-object": true,
          "description": "The path to storage for storing the interim data",
          "type": "string"
        },
        "enableCompression": {
          "x-ms-mark-object": true,
          "description": "Specifies whether to use compression when copying data via an interim staging. Default value is false.",
          "type": "boolean"
        }
      }
    },
    "CopyTranslator": {
      "discriminator": "type",
      "description": "A copy activity translator.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "TabularTranslator": {
      "description": "A copy activity tabular translator.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopyTranslator"
        }
      ],
      "properties": {
        "columnMappings": {
          "x-ms-mark-object": true,
          "description": "Column mappings.",
          "type": "string"
        }
      }
    },
    "HDInsightHiveActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDInsight activity properties.",
          "type": "object",
          "properties": {
            "storageLinkedServices": {
              "description": "Storage linked services.",
              "type": "array",
              "items": {
                "$ref": "../service.json#/definitions/LinkedServiceReference"
              }
            },
            "arguments": {
              "description": "User specified arguments to HDInsightActivity.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "getDebugInfo": {
              "$ref": "#/definitions/HDInsightActivityDebugInfoOption"
            },
            "scriptPath": {
              "description": "Script path.",
              "type": "string"
            },
            "scriptLinkedService": {
              "description": "Script linked service.",
              "$ref": "../service.json#/definitions/LinkedServiceReference"
            },
            "defines": {
              "description": "Allows user to specify defines for Hive job request.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "HDInsightActivityDebugInfoOption": {
      "description": "The HDInsightActivityDebugInfoOption settings to use.",
      "type": "string",
      "enum": [
        "None",
        "Always",
        "Failure"
      ],
      "x-ms-enum": {
        "name": "HDInsightActivityDebugInfoOption"
      }
    },
    "HDInsightPigActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDInsight activity properties.",
          "type": "object",
          "properties": {
            "storageLinkedServices": {
              "description": "Storage linked services.",
              "type": "array",
              "items": {
                "$ref": "../service.json#/definitions/LinkedServiceReference"
              }
            },
            "arguments": {
              "description": "User specified arguments to HDInsightActivity.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "getDebugInfo": {
              "$ref": "#/definitions/HDInsightActivityDebugInfoOption"
            },
            "scriptPath": {
              "description": "Script path.",
              "type": "string"
            },
            "scriptLinkedService": {
              "description": "Script linked service.",
              "$ref": "../service.json#/definitions/LinkedServiceReference"
            },
            "defines": {
              "description": "Allows user to specify defines for Hive job request.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DotNetActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": ".NET activity properties.",
          "type": "object",
          "properties": {
            "assemblyName": {
              "description": "Assembly name.",
              "type": "string"
            },
            "entryPoint": {
              "description": "Entry point.",
              "type": "string"
            },
            "packageLinkedService": {
              "description": "Package linkedService.",
              "type": "string"
            },
            "packageFile": {
              "description": "PackageFile.",
              "type": "string"
            },
            "extendedProperties": {
              "description": "User defined property bag. There is no restriction on the keys or values that can be used. The user specified .NET activity has the full responsibility to consume and interpret the content defined.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "assemblyName",
            "entryPoint",
            "packageFile"
          ]
        }
      }
    }
  }
}