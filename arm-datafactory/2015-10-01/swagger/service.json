{
  "swagger": "2.0",
  "info": {
    "title": "DataFactoryManagementClient",
    "version": "2015-10-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/pipelineRuns": {
      "post": {
        "operationId": "PipelineRuns_List",
        "description": "Retrieve information for past runs of pipelines.",
        "tags": [
          "factory",
          "pipeline",
          "run"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "query",
            "in": "body",
            "required": false,
            "description": "An OData query to select specific pipeline runs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineRunListResponse"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/pipelineRuns/{runId}": {
      "get": {
        "operationId": "PipelineRuns_Get",
        "description": "Retrieve information for a single past run of a pipeline.",
        "tags": [
          "factory",
          "pipeline",
          "run"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the pipeline run.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/indexes": {
      "get": {
        "tags": [
          "monitoring",
          "index",
          "proxyOnly"
        ],
        "operationId": "MonitoringIndexes_List",
        "description": "Retrieve the shape of monitoring indexes. Indexes are used by ADF to store monitoring-related information such as past pipeline runs.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MonitoringIndexListResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/indexes/{indexName}": {
      "get": {
        "operationId": "MonitoringIndexes_Get",
        "description": "Gets the shape of a single monitoring index. Indexes are used by ADF to store monitoring-related information such as past pipeline runs.",
        "tags": [
          "monitoring",
          "index"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "indexName",
            "description": "The index name.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MonitoringIndex"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories": {
      "get": {
        "tags": [
          "datafactories"
        ],
        "operationId": "DataFactories_List",
        "description": "Lists data factories.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataFactoryListResponse"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}": {
      "put": {
        "tags": [
          "datafactories"
        ],
        "operationId": "DataFactories_CreateOrUpdate",
        "description": "Creates or updates a data factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataFactoryResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataFactoryResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataFactoryResource"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DataFactoryResource"
            }
          },
          "404": {
            "description": "Subscription or resource group does not exist"
          }
        }
      },
      "get": {
        "tags": [
          "datafactories"
        ],
        "operationId": "DataFactories_Get",
        "description": "Gets a data factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataFactoryResource"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "datafactories"
        ],
        "operationId": "DataFactories_Delete",
        "description": "Deletes a data factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Subscription or resource group does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/linkedservices": {
      "get": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_List",
        "description": "Lists linked services.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkedServiceListResponse"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/linkedservices/{linkedServiceName}": {
      "put": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_CreateOrUpdate",
        "description": "Creates or updates a Linked Service.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/linkedServiceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the linkedService entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_Get",
        "description": "Gets a Linked Service.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/linkedServiceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_Delete",
        "description": "Deletes a Linked Service.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/linkedServiceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_List",
        "description": "Lists datasets.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetListResponse"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/datasets/{datasetName}": {
      "put": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_CreateOrUpdate",
        "description": "Creates or updates a Dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/datasetName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the dataset entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_Get",
        "description": "Gets a Dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/datasetName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_Delete",
        "description": "Deletes a Dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/datasetName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/datapipelines": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_List",
        "description": "Lists pipelines.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineListResponse"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories/{dataFactoryName}/datapipelines/{pipelineName}": {
      "put": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_CreateOrUpdate",
        "description": "Creates or updates a Pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the datapipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_Get",
        "description": "Gets a Pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_Delete",
        "description": "Deletes a Pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/datafactories{dataFactoryName}/datapipelines/{pipelineName}/createRun": {
      "post": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_CreateRun",
        "description": "Creates a run of a pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/dataFactoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/appmodel"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArgumentSetSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunTaskResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/RunTaskResponse"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name."
        }
      },
      "x-ms-azure-resource": true
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "SecureString": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "SecureString" ]
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "SecureObject": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "SecureObject" ]
        },
        "value": {
          "$ref": "#/definitions/Object"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "AdfTask": {
      "discriminator": "type",
      "type": "object",
      "description": "A runnable Adf task definition.",
      "properties": {
        "type": {
          "type": "string"
        },
        "timeout": {
          "description": "Duration after which the Adf task will be cancelled.",
          "type": "string",
          "format": "duration"
        }
      },
      "required": [
        "type"
      ]
    },
    "DataFactoryListResponse": {
      "description": "A list of DataFactory resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFactoryResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "LinkedServiceListResponse": {
      "description": "A list of LinkedService resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedServiceResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "DatasetListResponse": {
      "description": "A list of Dataset resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "PipelineListResponse": {
      "description": "A list of Pipeline resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "MonitoringIndexListResponse": {
      "description": "A list of monitoring indexes.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoringIndex"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "MonitoringIndex": {
      "description": "A monitoring index is used by ADF to store monitoring-related information such as past pipeline runs.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the index.",
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoringIndexField"
          }
        }
      }
    },
    "MonitoringIndexField": {
      "type": "object",
      "description": "A single field in a monitoring index, i.e. a column of data for a monitoring event.",
      "properties": {
        "name": {
          "description": "The name of the monitoring index field.",
          "type": "string"
        },
        "isSearchable": {
          "description": "Indicates whether or not this monitoring index field can be used by full-text searches.",
          "type": "boolean"
        },
        "isSortable": {
          "description": "Indicates whether or not monitoring event queries can be sorted by this field.",
          "type": "boolean"
        },
        "isFilterable": {
          "description": "Indicates whether or not monitoring event queries can specify this field for filter expressions.",
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/MonitoringIndexFieldType"
        }
      }
    },
    "MonitoringIndexFieldType": {
      "description": "Data types for monitoring index fields.",
      "type": "string",
      "x-ms-enum": {
        "name": "MonitoringIndexFieldType",
        "modelAsString": true
      },
      "enum": [
        "String",
        "Tags",
        "Int",
        "Long",
        "Numeric",
        "Boolean",
        "DateTime"
      ]
    },
    "PipelineRunListResponse": {
      "description": "A list of pipeline runs.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineRun"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "PipelineRun": {
      "description": "Describes information about a past pipeline run.",
      "type": "object",
      "properties": {
        "runId": {
          "type": "string"
        },
        "dataFactoryName": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runStart": {
          "type": "string"
        },
        "runEnd": {
          "type": "string"
        },
        "durationInMs": {
          "type": "number"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/MonitoringIndexFieldType"
        }
      }
    },
    "RunTaskResponse": {
      "type": "object",
      "properties": {
        "runId": {
          "description": "Identifier of a run",
          "type": "string"
        }
      },
      "required": [
        "runId"
      ]
    },
    "RunLog": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Run status",
          "type": "string"
        },
        "input": {
          "description": "Task input, which includes input parameter values",
          "$ref": "#/definitions/AdfTask"
        },
        "output": {
          "description": "Task output parameters",
          "type": "object"
        },
        "error": {
          "description": "Error information for a failed run",
          "$ref": "#/definitions/ErrorResponse"
        },
        "details": {
          "description": "Additional detailed run information",
          "type": "object"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "target": {
          "description": "Property name/path in request associated with error",
          "type": "string"
        },
        "details": {
          "description": "Array with additional error details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ParameterSetSpecification": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ParameterSpecification"
      }
    },
    "ParameterSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "int"
          ]
        },
        "defaultValue": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ArgumentSetSpecification": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ArgumentSpecification"
      }
    },
    "ArgumentSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "PipelineTask": {
      "allOf": [
        {
          "$ref": "#/definitions/AdfTask"
        }
      ],
      "properties": {
        "payload": {
          "$ref": "./entityTypes/Pipeline.json#/definitions/Pipeline"
        }
      }
    },
    "DataFactoryProperties": {
      "properties": {
        "dataFactoryId": {
          "description": "Internal data factory identifier.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Data factory provisioning state, example Succeeded",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "description": "Data factory provisioning error code, or null",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Data factory error message, or null",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PipelineReference": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "PipelineReference" ]
        },
        "referenceName": {
          "type": "string"
        },
        "arguments": {
          "$ref": "#/definitions/ArgumentSetSpecification"
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "PipelineResource": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/Pipeline.json#/definitions/Pipeline"
        }
      },
      "required": [
        "properties"
      ]
    },
    "DataFactoryResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataFactoryProperties"
        }
      }
    },
    "DatasetReference": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "DatasetReference" ]
        },
        "referenceName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "arguments": {
          "$ref": "#/definitions/ArgumentSetSpecification"
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "DatasetResource": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/Dataset.json#/definitions/Dataset"
        }
      },
      "required": [
        "properties"
      ]
    },
    "LinkedServiceReference": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "LinkedServiceReference" ]
        },
        "referenceName": {
          "type": "string"
        },
        "arguments": {
          "$ref": "#/definitions/ArgumentSetSpecification"
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "LinkedServiceResource": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/LinkedService.json#/definitions/LinkedService"
        }
      },
      "required": [
        "properties"
      ]
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "description": "The subscription id.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "description": "The resource group name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "dataFactoryName": {
      "name": "dataFactoryName",
      "description": "The workflow name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "linkedServiceName": {
      "name": "linkedServiceName",
      "description": "The linked service name",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "datasetName": {
      "name": "datasetName",
      "description": "The dataest name",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "pipelineName": {
      "name": "pipelineName",
      "description": "The datapipeline name",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "name": "api-version",
      "description": "The API version.",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "appmodel": {
      "name": "x-ms-datafactory-appmodel",
      "in": "header",
      "required": true,
      "type": "string",
      "enum": [ "datafactoryV2" ]
    }
  }
}
