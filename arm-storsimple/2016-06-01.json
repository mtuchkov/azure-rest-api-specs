{
  "swagger": "2.0",
  "info": {
    "version": "2016-06-01",
    "title": "StorSimpleManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "paths": {
    "/providers/{providerNamespace}/operations": {
      "get": {
        "tags": [
          "AvailableProviderOperations"
        ],
        "summary": "Retrieves all the available operations in a provider.",
        "operationId": "AvailableProviderOperations_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AvailableProviderOperations"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{providerNamespace}/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Retrieves all the managers in a subscription.",
        "operationId": "Managers_ListBySubscription",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Managers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Retrieves all the managers in a resource group.",
        "operationId": "Managers_ListByResourceGroup",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Managers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Returns the properties of the specified manager name.",
        "operationId": "Managers_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Creates or updates the manager.",
        "operationId": "Managers_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Manager",
            "in": "body",
            "description": "The manager.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Deletes the manager.",
        "operationId": "Managers_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/accessControlRecords": {
      "get": {
        "tags": [
          "AccessControlRecords"
        ],
        "summary": "Retrieves all the access control records in a manager.",
        "operationId": "AccessControlRecords_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The Manager Name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessControlRecordList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/accessControlRecords/{accessControlRecordName}": {
      "get": {
        "tags": [
          "AccessControlRecords"
        ],
        "summary": "Returns the properties of the specified access control record name.",
        "operationId": "AccessControlRecords_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "Name of access control record to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "AccessControlRecords"
        ],
        "summary": "Create or Updates an access control record.",
        "operationId": "AccessControlRecords_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "The name of the access control record.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessControlRecord",
            "in": "body",
            "description": "The access control record to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "AccessControlRecords"
        ],
        "summary": "Delete the access control record.",
        "operationId": "AccessControlRecords_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "The name of the access control record to delete.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Retrieves all the alerts in a manager.",
        "operationId": "Alerts_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Alerts"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/AlertFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Retrieves all the backups in a manager.",
        "operationId": "Backups_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Backups"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/BackupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/clearAlerts": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Clear the alerts.",
        "operationId": "Alerts_ClearAlerts",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The clear alert request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClearAlertRequest"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves all the devices in a manager.",
        "operationId": "Devices_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Returns the properties of the specified device name.",
        "operationId": "Devices_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes the device.",
        "operationId": "Devices_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "summary": "Patches the device.",
        "operationId": "Devices_Patch",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devicePatch",
            "in": "body",
            "description": "Patch representation of the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePatch"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/alertSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Returns the alert settings of the specified device name.",
        "operationId": "DeviceSettings_GetAlertSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Creates or updates the alert settings",
        "operationId": "DeviceSettings_CreateOrUpdateAlertSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "alertSettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Retrieves all the backups in a device. Can we used to get the backups for failover also.",
        "operationId": "Backups_ListAtDevice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forFailover",
            "in": "query",
            "description": "Set to true if you need backups which can be used for failover.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Backups"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/BackupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/backups/{backupName}": {
      "delete": {
        "tags": [
          "Backups"
        ],
        "summary": "Deletes the backup.",
        "operationId": "Backups_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The backup name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{elementName}/clone": {
      "post": {
        "tags": [
          "Backups"
        ],
        "summary": "Clones the given backup element to a new disk or share with given details.",
        "operationId": "Backups_Clone",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The backup name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "elementName",
            "in": "path",
            "description": "The backup element name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloneRequest",
            "in": "body",
            "description": "The clone request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloneRequest"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/backupScheduleGroups": {
      "get": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Retrieves all the backup schedule groups in a device.",
        "operationId": "BackupScheduleGroups_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroups"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}": {
      "get": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Returns the properties of the specified backup schedule group name.",
        "operationId": "BackupScheduleGroups_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Creates or Updates the backup schedule Group.",
        "operationId": "BackupScheduleGroups_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroup",
            "in": "body",
            "description": "The schedule group to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Deletes the backup schedule group.",
        "operationId": "BackupScheduleGroups_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/chaps": {
      "get": {
        "tags": [
          "Chaps"
        ],
        "operationId": "Chaps_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChapList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/chaps/{chapUserName}": {
      "get": {
        "tags": [
          "Chaps"
        ],
        "summary": "Returns the properties of the specified chap name.",
        "operationId": "Chaps_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapUserName",
            "in": "path",
            "description": "The user name of chap to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Chap"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Chaps"
        ],
        "summary": "Creates or updates the chap.",
        "operationId": "Chaps_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapUserName",
            "in": "path",
            "description": "The chap user name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapSetting",
            "in": "body",
            "description": "The chap setting to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Chap"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Chap"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Chaps"
        ],
        "summary": "Deletes the chap.",
        "operationId": "Chaps_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapUserName",
            "in": "path",
            "description": "The chap user name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/decommission": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Decomissions the device.",
        "operationId": "Devices_Decommission",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/disks": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "summary": "Retrieves all the iscsi disks in a device.",
        "operationId": "IscsiDisks_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIDisks"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/download": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Downloads udpates on the device.",
        "operationId": "Devices_DownloadUpdates",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/failover": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Fails over the device to another device.",
        "operationId": "Devices_Failover",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "failoverRequest",
            "in": "body",
            "description": "The failover request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverRequest"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/failoverTargets": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves all the devices which can be used as failover targets for the given device.",
        "operationId": "Devices_ListForFailover",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Retrieves all the file servers in a device.",
        "operationId": "FileServers_ListAtDevice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Returns the properties of the specified file server name.",
        "operationId": "FileServers_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "FileServers"
        ],
        "summary": "Creates or updates the file server.",
        "operationId": "FileServers_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServer",
            "in": "body",
            "description": "The file server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "FileServers"
        ],
        "summary": "Deletes the file server.",
        "operationId": "FileServers_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/backup": {
      "post": {
        "tags": [
          "FileServers"
        ],
        "summary": "Backup the file server now.",
        "operationId": "FileServers_BackupNow",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metrics": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Gets the file server metrics.",
        "operationId": "FileServers_GetMetrics",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The name of the file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Retrieves metric definitions of all metrics aggregated at the file server.",
        "operationId": "FileServers_ListMetricDefinition",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The name of the file server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Retrieves all the file shares in a file server.",
        "operationId": "FileShares_ListAtFileServer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileShares"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Returns the properties of the specified file share name.",
        "operationId": "FileShares_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "FileShares"
        ],
        "summary": "Creates or updates the file share.",
        "operationId": "FileShares_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileShare",
            "in": "body",
            "description": "The file share.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "FileShares"
        ],
        "summary": "Deletes the file share.",
        "operationId": "FileShares_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metrics": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Gets the file share metrics",
        "operationId": "FileShares_GetMetrics",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metricsDefinitions": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Retrieves metric definitions of all metrics aggregated at the file share.",
        "operationId": "FileShares_ListMetricDefinition",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/install": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Installs the updates on the device.",
        "operationId": "Devices_InstallUpdates",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Retrieves all the iscsi in a device.",
        "operationId": "IscsiServers_ListAtDevice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIServers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Returns the properties of the specified iscsi server name.",
        "operationId": "IscsiServers_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIServer"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Creates or updates the iscsi server.",
        "operationId": "IscsiServers_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServer",
            "in": "body",
            "description": "The iscsi server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ISCSIServer"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIServer"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Deletes the iscsi server.",
        "operationId": "IscsiServers_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/backup": {
      "post": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Backup the iscsi server now.",
        "operationId": "IscsiServers_BackupNow",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "summary": "Retrieves all the disks in a iscsi server.",
        "operationId": "IscsiDisks_ListAtIscsiServer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIDisks"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "summary": "Returns the properties of the specified iscsi disk name.",
        "operationId": "IscsiDisks_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The disk name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIDisk"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "IscsiDisks"
        ],
        "summary": "Creates or updates the iscsi disk.",
        "operationId": "IscsiDisks_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The disk name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiDisk",
            "in": "body",
            "description": "The iscsi disk.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ISCSIDisk"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIDisk"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "IscsiDisks"
        ],
        "summary": "Deletes the iscsi disk.",
        "operationId": "IscsiDisks_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The disk name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metrics": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "summary": "Gets the iscsi disk metrics",
        "operationId": "IscsiDisks_GetMetrics",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The iscsi disk name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metricsDefinitions": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "summary": "Retrieves metric definitions for all metric aggregated at the iscsi disk.",
        "operationId": "IscsiDisks_ListMetricDefinition",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The iscsi disk name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metrics": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Gets the iscsi server metrics",
        "operationId": "IscsiServers_GetMetrics",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The devie name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Retrieves metric definitions for all metrics aggregated at iscsi server.",
        "operationId": "IscsiServers_ListMetricDefinition",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The devie name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iscsi server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Retrieves all the jobs in a device.",
        "operationId": "Jobs_ListAtDevice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Returns the properties of the specified job name.",
        "operationId": "Jobs_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The job name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/metrics": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets the device metrics.",
        "operationId": "Devices_GetMetrics",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the appliance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/metricsDefinitions": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves metric definition of all metrics aggregated at device.",
        "operationId": "Devices_ListMetricDefinition",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the appliance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/networkSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Returns the network settings of the specified device name.",
        "operationId": "DeviceSettings_GetNetworkSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/publishSupportPackage": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Triggers collection of support package on a device.",
        "operationId": "Devices_PublishSupportPackage",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name,",
            "required": true,
            "type": "string"
          },
          {
            "name": "supportPackageRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupportPackageRequest"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/scan": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Scans for updates on the device.",
        "operationId": "Devices_ScanForUpdates",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/securitySettings/default/update": {
      "post": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Creates or updates the security settings.",
        "operationId": "DeviceSettings_CreateOrUpdateSecuritySettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securitySettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Send a test alert email.",
        "operationId": "Alerts_SendTestAlertEmail",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The send test alert email request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendTestAlertEmailRequest"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/shares": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Retrieves all the file shares in a device.",
        "operationId": "FileShares_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of FileShare objects in a device",
            "schema": {
              "$ref": "#/definitions/FileShares"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/timeSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Returns the time settings of the specified device name.",
        "operationId": "DeviceSettings_GetTimeSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TimeSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/updateSummary/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Returns the update summary of the specified device name.",
        "operationId": "Devices_GetUpdateSummary",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Updates"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/encryptionSettings/default": {
      "get": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Returns the encryption settings of the manager.",
        "operationId": "ManagerKeys_GetEncryptionSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EncryptionSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/extendedInformation/vaultExtendedInfo": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Returns the extended information of the specified manager name.",
        "operationId": "Managers_GetExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Creates the extended info of the manager.",
        "operationId": "Managers_CreateExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ManagerExtendedInfo",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Deletes the extended info of the manager.",
        "operationId": "Managers_DeleteExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "summary": "Updates the extended info of the manager.",
        "operationId": "Managers_UpdateExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ManagerExtendedInfo",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Pass the ETag of ExtendedInfo fetched from GET call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/fileservers": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Retrieves all the file servers in a manager.",
        "operationId": "FileServers_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/getActivationKey": {
      "post": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Returns the activation key of the manager.",
        "operationId": "ManagerKeys_GetActivationKey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/getEncryptionKey": {
      "post": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Returns the encryption key of the manager.",
        "operationId": "ManagerKeys_GetEncryptionKey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EncryptionKey"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/iscsiservers": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "summary": "Retrieves all the iscsi servers in a manager.",
        "operationId": "IscsiServers_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ISCSIServers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Retrieves all the jobs in a manager.",
        "operationId": "Jobs_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/metrics": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Gets the  manager metrics",
        "operationId": "Managers_GetMetrics",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Retrieves metric definition of all metrics aggregated at manager.",
        "operationId": "Managers_ListMetricDefinition",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/regenerateActivationKey": {
      "post": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Re-generates and returns the activation key of the manager.",
        "operationId": "ManagerKeys_RegenerateActivationKey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageAccountCredentials": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "operationId": "StorageAccountCredentials_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredentialList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageAccountCredentials/{credentialName}": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Returns the properties of the specified storage account credential name.",
        "operationId": "StorageAccountCredentials_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The name of storage account credential to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Creates or updates the storage account credential",
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The credential name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccount",
            "in": "body",
            "description": "The storage account credential to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Deletes the storage account credential",
        "operationId": "StorageAccountCredentials_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The name of the storage account credential.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageDomains": {
      "get": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Retrieves all the storage domains in a manager.",
        "operationId": "StorageDomains_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageDomains"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageDomains/{storageDomainName}": {
      "get": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Returns the properties of the specified storage domain name.",
        "operationId": "StorageDomains_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Creates or updates the storage domain.",
        "operationId": "StorageDomains_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageDomain",
            "in": "body",
            "description": "The storageDomain.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Deletes the storage domain.",
        "operationId": "StorageDomains_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AccessControlRecord": {
      "description": "The access control record",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccessControlRecordProperties",
          "description": "Properties for AccessControlRecord",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "AccessControlRecordList": {
      "description": "Collection of AccessControlRecords",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessControlRecord"
          }
        }
      }
    },
    "AccessControlRecordProperties": {
      "description": "Properties of access control record",
      "required": [
        "initiatorName"
      ],
      "type": "object",
      "properties": {
        "initiatorName": {
          "description": "The Iscsi initiator name (IQN)",
          "type": "string"
        }
      }
    },
    "Alert": {
      "description": "Alert class",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Properties of alert",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "AlertErrorDetails": {
      "description": "Errordetails for the alert",
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "occurences": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AlertFilter": {
      "description": "Filters that can be specified on the alert",
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Active",
            "Cleared"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": false
          }
        },
        "severity": {
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": false
          }
        },
        "sourceType": {
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSourceType",
            "modelAsString": false
          }
        },
        "sourceName": {
          "type": "string"
        },
        "appearedOnTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AlertProperties": {
      "description": "Properties of alert",
      "required": [
        "title",
        "scope",
        "alertType",
        "appearedAtTime",
        "appearedAtSourceTime",
        "source",
        "severity",
        "status"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "title of the alert",
          "type": "string"
        },
        "scope": {
          "description": "device or resource alert",
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertScope",
            "modelAsString": false
          }
        },
        "alertType": {
          "description": "type of the alert",
          "type": "string"
        },
        "appearedAtTime": {
          "format": "date-time",
          "description": "UTC time at which the alert appeared",
          "type": "string"
        },
        "appearedAtSourceTime": {
          "format": "date-time",
          "description": "UTC time at which the alert appeared on the source",
          "type": "string"
        },
        "clearedAtTime": {
          "format": "date-time",
          "description": "UTC time at which the alert got cleared",
          "type": "string"
        },
        "clearedAtSourceTime": {
          "format": "date-time",
          "description": "UTC time at which the alert was cleared on the source",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/AlertSource",
          "description": "source at which the alert was cleared"
        },
        "recommendation": {
          "description": "Recommendation for acting on the alert",
          "type": "string"
        },
        "resolutionReason": {
          "description": "Reason for resolving the alert",
          "type": "string"
        },
        "severity": {
          "description": "severity of the alert",
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": false
          }
        },
        "status": {
          "description": "current status of the alert",
          "enum": [
            "Active",
            "Cleared"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": false
          }
        },
        "errorDetails": {
          "$ref": "#/definitions/AlertErrorDetails",
          "description": "ErrorDetails of the alert"
        },
        "detailedInformation": {
          "description": "other information about the alert",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Alerts": {
      "description": "Collection of Alerts",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "description": "Id of the next page of alerts",
          "type": "string"
        }
      }
    },
    "AlertSettings": {
      "description": "AlertSettings on the device which represents how alerts will be processed",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertSettingsProperties",
          "description": "Properties for AlertSettings",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "AlertSettingsProperties": {
      "description": "Class containing the properties for Alertsettings",
      "required": [
        "emailNotification",
        "notificationToServiceOwners",
        "alertNotificationCulture"
      ],
      "type": "object",
      "properties": {
        "emailNotification": {
          "description": "Gets or sets a value indicating whether user/admins will receive emails when an alert condition occurs on the system",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertEmailNotificationStatus",
            "modelAsString": false
          }
        },
        "notificationToServiceOwners": {
          "description": "Gets or sets a value indicating whether service owners will receive emails when an alert condition occurs on the system\r\n            This is applicable only if emailNotification flag is Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ServiceOwnersAlertNotificationStatus",
            "modelAsString": false
          }
        },
        "alertNotificationCulture": {
          "description": "Gets or sets the culture setting to be used while building alert emails",
          "type": "string"
        },
        "additionalRecipientEmailList": {
          "description": "List of email addresses (apart from admin/coadmin of subscription) to whom the alert emails need to be sent\r\n            This will be stored in encrypted format for security purposes",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AlertSource": {
      "description": "source at which the alert can be raised",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "alertSourceType": {
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSourceType",
            "modelAsString": false
          }
        }
      }
    },
    "AvailableProviderOperation": {
      "description": "Class represents provider operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the operation being performed on this particular object\r\n            Return value format: \"{resourceProviderNamespace}/{resourceType}/{read|write|deletion|action}\"\r\n            Eg: Microsoft.StorSimple/managers/devices/fileServers/read\r\n                Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/AvailableProviderOperationDisplay",
          "description": "Gets or sets Display information\r\n            Contains the localized display information for this particular operation/action"
        },
        "origin": {
          "description": "Gets or sets Origin\r\n            The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\n            Default value is “user,system”",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/AvailableProviderOperationProperties",
          "description": "Gets or sets Properties\r\n            Reserved for future use",
          "x-ms-client-flatten": true
        }
      }
    },
    "AvailableProviderOperationDisplay": {
      "description": "Contains the localized display information for this particular operation / action. \r\n            These value will be used by several clients for \r\n            (1) custom role definitions for RBAC; \r\n            (2) complex query filters for the event service; and (3) audit history / records for management operations.",
      "type": "object",
      "properties": {}
    },
    "AvailableProviderOperationProperties": {
      "description": "Class represents Properties in AvailableProviderOperations",
      "type": "object",
      "properties": {}
    },
    "AvailableProviderOperations": {
      "description": "Class for set of operations used for discovery of available provider operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableProviderOperation"
          }
        },
        "nextLink": {
          "description": "Gets or sets the NextLink",
          "type": "string"
        }
      }
    },
    "Backup": {
      "description": "The backup.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupProperties",
          "description": "Properties of backup",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "BackupElement": {
      "description": "Class represents BackupElement",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupElementProperties",
          "description": "Gets or sets the Properties",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "BackupElementProperties": {
      "description": "The backup element properties",
      "required": [
        "sizeInBytes",
        "endpointName",
        "endpointId",
        "dataPolicy"
      ],
      "type": "object",
      "properties": {
        "sizeInBytes": {
          "format": "int64",
          "description": "Gets or sets the size in MB.",
          "type": "integer"
        },
        "endpointName": {
          "description": "Gets or sets the name of the endpoint.",
          "type": "string"
        },
        "endpointId": {
          "description": "Gets or sets the endpoint identifier.",
          "type": "string"
        },
        "dataPolicy": {
          "description": "Gets or sets the data policy of backed up endpoint.",
          "enum": [
            "Invalid",
            "Local",
            "Tiered",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": false
          }
        }
      }
    },
    "BackupFilter": {
      "description": "Backup OData filter class",
      "type": "object",
      "properties": {
        "initiatedBy": {
          "description": "Gets or sets InitiatedBy",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InitiatedBy",
            "modelAsString": false
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "Gets or sets CreatedTime",
          "type": "string"
        }
      }
    },
    "BackupProperties": {
      "description": "Class represents Backup properties",
      "required": [
        "sizeInBytes",
        "initiatedBy",
        "deviceId",
        "elements"
      ],
      "type": "object",
      "properties": {
        "targetId": {
          "description": "Gets or sets the target id\r\n            The path id of the target FileServer or IscsiServer for which the backup was taken.",
          "type": "string"
        },
        "targetType": {
          "description": "Gets or sets target type",
          "type": "string"
        },
        "sizeInBytes": {
          "format": "int64",
          "description": "Gets or sets size in MB\r\n            The backup size in bytes.",
          "type": "integer"
        },
        "createdTime": {
          "format": "date-time",
          "description": "Gets or sets the created time.\r\n            The time when the backup was created.",
          "type": "string"
        },
        "expirationTime": {
          "format": "date-time",
          "description": "Gets or sets the expiration time.\r\n            The time when the backup will expire.",
          "type": "string"
        },
        "initiatedBy": {
          "description": "Gets or sets the initiated by.\r\n            Indicates how the backup was initiated \"Manual | Scheduled\".",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InitiatedBy",
            "modelAsString": false
          }
        },
        "deviceId": {
          "description": "Gets or sets the Device Identifier.",
          "type": "string"
        },
        "elements": {
          "description": "Gets or sets the backup elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupElement"
          }
        }
      }
    },
    "Backups": {
      "description": "Collection of backups",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Backup"
          }
        },
        "nextLink": {
          "description": "Gets or sets the NextLink",
          "type": "string"
        }
      }
    },
    "BackupScheduleGroup": {
      "description": "The Backup Schedule Group",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupScheduleGroupProperties",
          "description": "Properties of BackupScheduleGroup",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "BackupScheduleGroupProperties": {
      "description": "The Backup Schedule Group Properties",
      "required": [
        "startTime"
      ],
      "type": "object",
      "properties": {
        "startTime": {
          "$ref": "#/definitions/Time",
          "description": "Gets or sets the start time.\r\n            When this field is specified we will generate Default GrandFather Father Son Backup Schedules."
        }
      }
    },
    "BackupScheduleGroups": {
      "description": "The list response of backup schedule groups",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupScheduleGroup"
          }
        }
      }
    },
    "Chap": {
      "description": "Challenge-Handshake Authentical Protocol (CHAP) setting",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ChapProperties",
          "description": "Chap properties",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ChapList": {
      "description": "Collection of Chap setting entities",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the chap settings entity collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chap"
          }
        }
      }
    },
    "ChapProperties": {
      "description": "Chap properties",
      "required": [
        "password"
      ],
      "type": "object",
      "properties": {
        "password": {
          "description": "Gets or sets the encrypted password for chap",
          "type": "string"
        },
        "passwordEncrpyptionCertificateThumbprint": {
          "description": "Gets or sets the password encryption thumbprint for chap",
          "type": "string"
        }
      }
    },
    "ClearAlertRequest": {
      "description": "request for clearing the alert",
      "required": [
        "alerts"
      ],
      "type": "object",
      "properties": {
        "resolutionMessage": {
          "description": "resolution message while clearing the request",
          "type": "string"
        },
        "alerts": {
          "description": "list of alert Ids to be cleared",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CloneRequest": {
      "description": "Clone Job Request Model.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloneRequestProperties",
          "description": "CloneJob Properties are encapsulated in this object.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloneRequestProperties": {
      "description": "Properties of CloneRequest",
      "required": [
        "targetDeviceId",
        "targetAccessPointId",
        "newEndpointName"
      ],
      "type": "object",
      "properties": {
        "targetDeviceId": {
          "description": "DeviceId of the device which will act as the Clone target",
          "type": "string"
        },
        "targetAccessPointId": {
          "description": "Accesspoint Id on which clone job will performed.",
          "type": "string"
        },
        "newEndpointName": {
          "description": "Name of new endpoint which will created as part of clone job.",
          "type": "string"
        },
        "share": {
          "$ref": "#/definitions/FileShare",
          "description": "Share Object."
        },
        "disk": {
          "$ref": "#/definitions/ISCSIDisk",
          "description": "Disk Object"
        }
      }
    },
    "Device": {
      "description": "Represents a StorSimple device object along with its properties",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceProperties",
          "description": "Collection of properties for the device",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DeviceDetails": {
      "description": "Class containing more granular details about the device",
      "type": "object",
      "properties": {
        "endpointCount": {
          "format": "int32",
          "description": "Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)",
          "type": "integer"
        },
        "totalStorageInBytes": {
          "format": "int64",
          "description": "Total storage available on the device in bytes.",
          "type": "integer"
        },
        "totalLocalStorageInBytes": {
          "format": "int64",
          "description": "Total local storage capacity in device",
          "type": "integer"
        },
        "provisionedStorageInBytes": {
          "format": "int64",
          "description": "Storage in bytes that has been provisioned on the device including both local and cloud",
          "type": "integer"
        },
        "provisionedLocalStorageInBytes": {
          "format": "int64",
          "description": "Storage in bytes that has been provisioned locally on the device",
          "type": "integer"
        },
        "usingStorageInBytes": {
          "format": "int64",
          "description": "Storage that is being currently used in bytes including both local and cloud",
          "type": "integer"
        },
        "usingLocalStorageInBytes": {
          "format": "int64",
          "description": "Local Storage that is being currently used in bytes",
          "type": "integer"
        },
        "totalBackupSizeInBytes": {
          "format": "int64",
          "description": "Total size taken up by backups in bytes",
          "type": "integer"
        },
        "availableStorageInBytes": {
          "format": "int64",
          "description": "Total pending available storage on the device in bytes",
          "type": "integer"
        },
        "availableLocalStorageInBytes": {
          "format": "int64",
          "description": "Local pending storage available on the device in bytes",
          "type": "integer"
        }
      }
    },
    "DeviceList": {
      "description": "Collection of Devices",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        }
      }
    },
    "DevicePatch": {
      "description": "Class that represents the Input for the PATCH call on Device\r\n            Currently the only patchable property on device is \"DeviceDescription\"",
      "type": "object",
      "properties": {
        "deviceDescription": {
          "description": "Short description given for the device",
          "type": "string"
        }
      }
    },
    "DeviceProperties": {
      "description": "Encases all the properties of the Device",
      "type": "object",
      "properties": {
        "activationTime": {
          "format": "date-time",
          "description": "The UTC time at which the device was activated",
          "type": "string"
        },
        "allowedDeviceOperations": {
          "description": "Operations that are allowed on the device based on its current state",
          "type": "array",
          "items": {
            "enum": [
              "None",
              "Delete",
              "DeleteWithWarning",
              "Decommission",
              "DRSource",
              "DRTarget",
              "Browsable",
              "ReadOnlyForDR"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DeviceOperation",
              "modelAsString": false
            }
          }
        },
        "culture": {
          "description": "Language culture setting on the device",
          "type": "string"
        },
        "deviceCapabilities": {
          "description": "Device can be configured either as FileServer or IscsiServer",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "FileServer",
              "IscsiServer"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "SupportedDeviceCapabilities",
              "modelAsString": false
            }
          }
        },
        "deviceDescription": {
          "description": "Short description given for the device",
          "type": "string"
        },
        "domainName": {
          "description": "Fully qualified name of the domain to which the device is attached",
          "type": "string"
        },
        "deviceSoftwareVersion": {
          "description": "Version number of the software running on the device",
          "type": "string"
        },
        "friendlySoftwareName": {
          "description": "Friendly name for the software version",
          "type": "string"
        },
        "deviceConfigurationStatus": {
          "description": "\"Complete\" if the device has been successfully registered as File/IscsiServer and the creation of share/volume is complete\r\n            \"Pending\" if the device is only registered but the creation of share/volume is complete is still pending",
          "enum": [
            "Complete",
            "Pending"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceConfigurationStatus",
            "modelAsString": false
          }
        },
        "modelDescription": {
          "description": "Name of the device model",
          "type": "string"
        },
        "status": {
          "description": "Current status of the device",
          "enum": [
            "Unknown",
            "Online",
            "Offline",
            "Decommissioned",
            "RequiresAttention",
            "MaintenanceMode",
            "Creating",
            "Provisioning",
            "Decommissioning",
            "Deleted",
            "PendingConfiguration"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceStatus",
            "modelAsString": false
          }
        },
        "type": {
          "description": "Type of the device",
          "enum": [
            "Invalid",
            "Appliance",
            "VirtualAppliance",
            "HelsinkiOnPremVirtualAppliance",
            "HelsinkiVirtualAppliance",
            "HelsinkiPhysicalAppliance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceType",
            "modelAsString": false
          }
        },
        "details": {
          "$ref": "#/definitions/DeviceDetails",
          "description": "subclass containing more storage-related information about the device\r\n            This field will be populated only if the get call is made with $expand = details"
        }
      }
    },
    "EncryptionKey": {
      "description": "Model to represent the EncryptionKey for a manager",
      "required": [
        "encryptionAlgorithm"
      ],
      "type": "object",
      "properties": {
        "encryptionAlgorithm": {
          "description": "Gets or sets the encryption algorithm which was used to encrypt the EncodedPublicKey.",
          "enum": [
            "None",
            "AES256"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": false
          }
        },
        "encryptedPublicKey": {
          "description": "Gets or sets the encrypted public key.",
          "type": "string"
        },
        "certificateThumbprint": {
          "description": "Gets or sets the thumbprint.",
          "type": "string"
        }
      }
    },
    "EncryptionSettings": {
      "description": "Model to represent the EncryptionSettings",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EncryptionSettingsProperties",
          "description": "properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "EncryptionSettingsProperties": {
      "description": "Class containing the properties of EncryptionSettings",
      "required": [
        "encryptionStatus",
        "keyRolloverStatus"
      ],
      "type": "object",
      "properties": {
        "encryptionStatus": {
          "description": "Gets or sets the encryption status which indicates if encryption is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        },
        "keyRolloverStatus": {
          "description": "Gets or sets the key rollover status which indicates if key rollover is required or not.\r\n            If secrets encryption has been upgraded, then it requires key rollover.",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyRolloverStatus",
            "modelAsString": false
          }
        }
      }
    },
    "FailoverRequest": {
      "description": "The Failover request object.",
      "type": "object",
      "properties": {
        "accesspointIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetDeviceId": {
          "type": "string"
        },
        "skipValidation": {
          "type": "boolean"
        },
        "keepSourceDevice": {
          "type": "boolean"
        }
      }
    },
    "FileServer": {
      "description": "The file server.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileServerProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FileServerProperties": {
      "description": "The file server properties.",
      "required": [
        "domainName",
        "storageDomainId",
        "backupScheduleGroupId"
      ],
      "type": "object",
      "properties": {
        "domainName": {
          "description": "Domain of the file server",
          "type": "string"
        },
        "storageDomainId": {
          "description": "Gets or sets the storage domain id.",
          "type": "string"
        },
        "backupScheduleGroupId": {
          "description": "Gets or sets the backup policy id.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description of the file server",
          "type": "string"
        }
      }
    },
    "FileServers": {
      "description": "Collection of file servers",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileServer"
          }
        }
      }
    },
    "FileShare": {
      "description": "The File Share.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileShareProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FileShareProperties": {
      "description": "The File Share.",
      "required": [
        "shareStatus",
        "dataPolicy",
        "adminUser",
        "provisionedCapacityInBytes",
        "tieringThresholdInBytes",
        "monitoringStatus"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Gets or sets description for file share",
          "type": "string"
        },
        "shareStatus": {
          "description": "Gets or sets Share Status",
          "enum": [
            "Online",
            "Offline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareStatus",
            "modelAsString": false
          }
        },
        "dataPolicy": {
          "description": "Gets or sets data policy",
          "enum": [
            "Invalid",
            "Local",
            "Tiered",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": false
          }
        },
        "adminUser": {
          "description": "Gets or sets user/group who will have full permission in this share\r\n            Active directory email address. Example: xyz@microsoft.com or Fareast\\xyz\r\n            Create and Read only field.",
          "type": "string"
        },
        "provisionedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets total provisioned capacity in Bytes",
          "type": "integer"
        },
        "usedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets used capacity in Bytes\r\n            Read only",
          "type": "integer"
        },
        "localUsedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets used capacity in Bytes\r\n            Read only",
          "type": "integer"
        },
        "tieringThresholdInBytes": {
          "format": "int64",
          "description": "Gets or sets tiering threshold in Bytes\r\n            Portal will have slider to select this percentage (not supported in v1)",
          "type": "integer"
        },
        "monitoringStatus": {
          "description": "Gets or sets the monitoring.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": false
          }
        }
      }
    },
    "FileShares": {
      "description": "Collection of file shares",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileShare"
          }
        }
      }
    },
    "IPConfig": {
      "description": "Class containing details related to the IP address configuration",
      "required": [
        "ipAddress",
        "gateway"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "Gets or sets the ipaddress of the network adapter.",
          "type": "string"
        },
        "prefixLength": {
          "format": "int32",
          "description": "Gets or sets the prefix length of the network adapter.",
          "type": "integer"
        },
        "gateway": {
          "description": "Gets or sets the gateway of the network adapter.",
          "type": "string"
        },
        "ipConfigStatus": {
          "description": "Gets or sets the ipconfig status of the network adapter.",
          "type": "string"
        }
      }
    },
    "ISCSIDisk": {
      "description": "The iscsi disk.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ISCSIDiskProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ISCSIDiskProperties": {
      "description": "The iscsi disk properties.",
      "required": [
        "diskStatus",
        "accessControlRecords",
        "dataPolicy",
        "provisionedCapacityInBytes",
        "tieringThresholdInBytes",
        "monitoringStatus"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "diskStatus": {
          "description": "Gets or sets the disk status.",
          "enum": [
            "Online",
            "Offline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DiskStatus",
            "modelAsString": false
          }
        },
        "accessControlRecords": {
          "description": "Gets or sets the access control records.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataPolicy": {
          "description": "Gets or sets the data policy.",
          "enum": [
            "Invalid",
            "Local",
            "Tiered",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": false
          }
        },
        "provisionedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the provisioned capacity in bytes.",
          "type": "integer"
        },
        "usedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the used capacity in bytes.",
          "type": "integer"
        },
        "localCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the local capacity in bytes.",
          "type": "integer"
        },
        "tieringThresholdInBytes": {
          "format": "int64",
          "description": "Gets or sets the tiering threshold in bytes.",
          "type": "integer"
        },
        "monitoringStatus": {
          "description": "Gets or sets the monitoring.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": false
          }
        }
      }
    },
    "ISCSIDisks": {
      "description": "Collection of Iscsi disk",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISCSIDisk"
          }
        }
      }
    },
    "ISCSIServer": {
      "description": "The iscsi server.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ISCSIServerProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ISCSIServerProperties": {
      "description": "The iscsi server properties.",
      "required": [
        "storageDomainId",
        "backupScheduleGroupId"
      ],
      "type": "object",
      "properties": {
        "storageDomainId": {
          "description": "Gets or sets the storage domain id.",
          "type": "string"
        },
        "backupScheduleGroupId": {
          "description": "Gets or sets the backup policy id.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "chapId": {
          "description": "Gets or sets the chap id.",
          "type": "string"
        },
        "reverseChapId": {
          "description": "Gets or sets the reverse chap id.",
          "type": "string"
        }
      }
    },
    "ISCSIServers": {
      "description": "Collection of Iscsi servers",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISCSIServer"
          }
        }
      }
    },
    "Job": {
      "description": "Class representing a storsimple Job",
      "required": [
        "status",
        "percentComplete"
      ],
      "type": "object",
      "properties": {
        "status": {
          "description": "Current status of the job",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "UTC time at which the job was started",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "UTC time at which the job completed",
          "type": "string"
        },
        "percentComplete": {
          "format": "int32",
          "description": "percentage of the job that is already complete",
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/JobErrorDetails",
          "description": "Error details if any"
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Other properties of the job",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "JobErrorDetails": {
      "description": "The job error information containing List of JobErrorItem.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "errorDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorItem"
          }
        },
        "code": {
          "description": "The code intended for programmatic access",
          "type": "string"
        },
        "message": {
          "description": "The message intended to describe the error in detail",
          "type": "string"
        }
      }
    },
    "JobErrorItem": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "recommendations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "description": "The code intended for programmatic access",
          "type": "string"
        },
        "message": {
          "description": "The message intended to describe the error in detail",
          "type": "string"
        }
      }
    },
    "JobFilter": {
      "description": "Filters that can be specified for the job",
      "required": [
        "jobType",
        "status"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "enum": [
            "Invalid",
            "Backup",
            "Clone",
            "Failover",
            "DownloadUpdates",
            "InstallUpdates"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          }
        },
        "status": {
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "JobList": {
      "description": "Collection of jobs",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "description": "Gets or sets the NextLink",
          "type": "string"
        }
      }
    },
    "JobProperties": {
      "description": "properties for the job",
      "required": [
        "jobType"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "type of the job",
          "enum": [
            "Invalid",
            "Backup",
            "Clone",
            "Failover",
            "DownloadUpdates",
            "InstallUpdates"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          }
        },
        "targetId": {
          "description": "Id of the object that is created by the job",
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "jobStages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStage"
          }
        },
        "deviceId": {
          "description": "deviceId in which the job is currently running",
          "type": "string"
        },
        "isCancellable": {
          "description": "represents whether the job is cancellable or not",
          "type": "boolean"
        },
        "stats": {
          "$ref": "#/definitions/JobStats",
          "description": "stats properties for the job"
        },
        "targetType": {
          "enum": [
            "FileServer",
            "DiskServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TargetType",
            "modelAsString": false
          }
        },
        "sourceDeviceId": {
          "type": "string"
        },
        "backupPointInTime": {
          "format": "date-time",
          "type": "string"
        },
        "downloadProgress": {
          "$ref": "#/definitions/UpdateDownloadProgress"
        },
        "installProgress": {
          "$ref": "#/definitions/UpdateInstallProgress"
        }
      }
    },
    "JobStage": {
      "description": "Contains details about the multiple job stages of a job",
      "required": [
        "stageStatus"
      ],
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "stageStatus": {
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "detail": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "JobStats": {
      "description": "Stats that are available for all jobs in common",
      "type": "object",
      "properties": {
        "completedWorkItemCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalWorkItemCount": {
          "format": "int32",
          "type": "integer"
        },
        "estimatedTimeRemaining": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Key": {
      "description": "Model to represent the Key",
      "required": [
        "activationKey"
      ],
      "type": "object",
      "properties": {
        "activationKey": {
          "description": "Gets or sets the activation key for Series-9000 device",
          "type": "string"
        }
      }
    },
    "Manager": {
      "description": "Model of the Manager",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerProperties",
          "description": "List of properties of the Manager",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "ETag of the Manager",
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfo": {
      "description": "Model of the ManagerExtendedInfo",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerExtendedInfoProperties",
          "description": "XML Serialized string containing the following properties:\r\n            Algorithm, ChannelEncryptionKey, ChannelIntegrationKey,Version",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "ETag of the Resource",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfoProperties": {
      "description": "Contains properties of the ManagerExtendedInfo object",
      "type": "object",
      "properties": {
        "version": {
          "description": "Represents the version of the ExtendedInfo object being persisted",
          "type": "string"
        },
        "integrityKey": {
          "description": "Represents the CIK of the resource",
          "type": "string"
        },
        "encryptionKey": {
          "description": "Represents the CEK of the resource",
          "type": "string"
        },
        "encryptionKeyThumbprint": {
          "description": "Represents the Cert thumbprint that was used to encrypt the CEK",
          "type": "string"
        },
        "portalCertificateThumbprint": {
          "description": "Represents the thumbprint of the portal thumbprint which can be optionally\r\n            used to encrypt the entire data before persisting in core services DB",
          "type": "string"
        },
        "algorithm": {
          "description": "Represents the encryption algorithm used to encrypt the other keys\r\n            None - if EncryptionKey is saved in plain text format\r\n            AlgorithmName - if encryption is used",
          "type": "string"
        }
      }
    },
    "ManagerIntrinsicSettings": {
      "description": "Intrinsic settings which refers to the type of the Storsimple manager",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Refers to the type of the StorSimple Manager",
          "enum": [
            "GardaV1",
            "HelsinkiV1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagerType",
            "modelAsString": false
          }
        }
      }
    },
    "ManagerProperties": {
      "type": "object",
      "properties": {
        "cisIntrinsicSettings": {
          "$ref": "#/definitions/ManagerIntrinsicSettings",
          "description": "Specifies if the Manager is Garda or Helsinki"
        },
        "sku": {
          "$ref": "#/definitions/Managersku",
          "description": "Specifies the name of the sku"
        },
        "provisioningState": {
          "description": "Specifies the state of the resouce as it is getting provisioned\r\n            Value of \"Succeeded\" means the Manager was successfully created",
          "type": "string"
        }
      }
    },
    "Managers": {
      "description": "Model to represent a list of storsimple Managers under a particular resourceGroup",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Manager"
          }
        }
      }
    },
    "Managersku": {
      "description": "Sku object which is part of the Manager",
      "type": "object",
      "properties": {
        "name": {
          "description": "Refers to the sku name which should be \"standard\"",
          "type": "string"
        }
      }
    },
    "MetricAvailablity": {
      "description": "Metric availability specifies the time grain (aggregation interval or frequency) \r\n            and the retention period for that time grain",
      "required": [
        "timeGrain",
        "retention"
      ],
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "Get or sets the time grain, specifies the aggregation interval for the metric.",
          "type": "string"
        },
        "retention": {
          "description": "Gets or set the retention period for the metric at the specified timegrain",
          "type": "string"
        }
      }
    },
    "MetricData": {
      "required": [
        "timeStamp",
        "sum",
        "count",
        "average",
        "minimum",
        "maximum"
      ],
      "type": "object",
      "properties": {
        "timeStamp": {
          "format": "date-time",
          "description": "Gets or sets the time when the metric data is fetched",
          "type": "string"
        },
        "sum": {
          "format": "double",
          "description": "Gets or sets the sum of all the samples available in the \r\n            given instance of time for the specific metric data",
          "type": "number"
        },
        "count": {
          "format": "int32",
          "description": "Gets or sets the count of samples of the metric data available for\r\n            the given instance",
          "type": "integer"
        },
        "average": {
          "format": "double",
          "description": "Gets or sets the average of all sample for the given instance",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "description": "Gets or sets the minimum of all samples available",
          "type": "number"
        },
        "maximum": {
          "format": "double",
          "description": "Gets or sets the maximum of all samples available",
          "type": "number"
        }
      }
    },
    "MetricDefinition": {
      "description": "Monitoring metric definition represents the metadata of the metrics.",
      "required": [
        "name",
        "unit",
        "primaryAggregationType",
        "resourceId",
        "metricAvailabilities",
        "dimensions"
      ],
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "Gets or sets the metric name"
        },
        "unit": {
          "description": "Gets or sets the metric unit",
          "enum": [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": false
          }
        },
        "primaryAggregationType": {
          "description": "Gets or sets the metric aggregation type",
          "enum": [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": false
          }
        },
        "resourceId": {
          "description": "Gets or sets metric source id",
          "type": "string"
        },
        "metricAvailabilities": {
          "description": "Gets or sets the available metric granularities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricAvailablity"
          }
        },
        "dimensions": {
          "description": "Gets or sets the supported dimensions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        }
      }
    },
    "MetricDefinitionList": {
      "description": "List of metric definition",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or set the list of metric definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          }
        }
      }
    },
    "MetricDimension": {
      "description": "Metric dimension",
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Metric dimension name",
          "type": "string"
        },
        "value": {
          "description": "Metric dimension values",
          "type": "string"
        }
      }
    },
    "MetricFilter": {
      "description": "class representing the filters to be passed while fetching metrics",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/MetricNameFilter",
          "description": "filter for name property"
        },
        "startTime": {
          "format": "date-time",
          "description": "starttime for fetching metrics",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "endtime for fetching metrics",
          "type": "string"
        },
        "timeGrain": {
          "description": "timegrain of the metrics",
          "type": "string"
        }
      }
    },
    "MetricList": {
      "description": "Collection of metrics",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metrics"
          }
        }
      }
    },
    "MetricName": {
      "description": "Class represents the name of the metric",
      "required": [
        "value",
        "localizedValue"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "value of the metric",
          "type": "string"
        },
        "localizedValue": {
          "description": "localizedvalue of the metric",
          "type": "string"
        }
      }
    },
    "MetricNameFilter": {
      "description": "Class representing the name filter to be passed while fetching metrics",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "Metrics": {
      "description": "Monitoring metric",
      "required": [
        "resourceId",
        "startTime",
        "endTime",
        "timeGrain",
        "primaryAggregation",
        "name",
        "dimensions",
        "unit",
        "values"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Gets or sets the id of metric source",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Gets or sets the metric start time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Gets or sets the metric end time",
          "type": "string"
        },
        "timeGrain": {
          "description": "Gets or sets the time grain, time grain indicates frequency of the metric data",
          "type": "string"
        },
        "primaryAggregation": {
          "description": "Gets or sets the metric aggregation type",
          "enum": [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": false
          }
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "Gets or sets the name of the metrics"
        },
        "dimensions": {
          "description": "Get or sets Metric dimension which indicates the source of the metric",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "unit": {
          "description": "Gets or sets unit of the metric data",
          "enum": [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": false
          }
        },
        "values": {
          "description": "Gets or sets the metric data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricData"
          }
        }
      }
    },
    "NetworkAdapter": {
      "description": "Represents a networkAdapter in a particular node.",
      "required": [
        "networkAdapterName",
        "dhcpStatus"
      ],
      "type": "object",
      "properties": {
        "networkAdapterName": {
          "description": "Gets or sets the name of the network adapter.",
          "type": "string"
        },
        "iPv4Info": {
          "$ref": "#/definitions/IPConfig",
          "description": "Gets or sets the ipv4configuration of the network adapter."
        },
        "iPv6Info": {
          "$ref": "#/definitions/IPConfig",
          "description": "Gets or sets the ipv6configuration of the network adapter."
        },
        "dhcpStatus": {
          "description": "Gets or sets the flag which represents state of DHCP.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DhcpStatus",
            "modelAsString": false
          }
        },
        "linkSpeed": {
          "format": "int64",
          "description": "Gets or sets the speed of the network adapter.",
          "type": "integer"
        }
      }
    },
    "NetworkSettings": {
      "description": "Model to represent the NetworkSettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsProperties",
          "description": "Properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "NetworkSettingsProperties": {
      "description": "Class containing the properties of NetworkSettings",
      "required": [
        "primaryDNSServer",
        "nodeNetworks"
      ],
      "type": "object",
      "properties": {
        "primaryDNSServer": {
          "description": "Gets or sets the Primary DNS server for the appliance",
          "type": "string"
        },
        "secondaryDNSServer": {
          "description": "Gets or sets the secondary DNS server for the appliance",
          "type": "string"
        },
        "nodeNetworks": {
          "description": "Gets or sets the NetworkAdapters under each node of the device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeNetwork"
          }
        }
      }
    },
    "NodeNetwork": {
      "description": "Represents a single node in a device. In Helsinki VA, only 1 Node is present",
      "required": [
        "networkAdapters"
      ],
      "type": "object",
      "properties": {
        "networkAdapters": {
          "description": "Gets or sets the list of network adapters in the node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAdapter"
          }
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "Resource": {
      "description": "The Azure Resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The Resource Id",
          "type": "string"
        },
        "name": {
          "description": "The Resource Name",
          "type": "string"
        },
        "type": {
          "description": "The Resource type",
          "type": "string"
        },
        "location": {
          "description": "The Geo location of the Manager",
          "type": "string"
        },
        "tags": {
          "description": "Tags attached to the Manager",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "SecuritySettings": {
      "description": "Model to represent the SecuritySettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsProperties",
          "description": "Properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SecuritySettingsProperties": {
      "description": "Class containing the properties for SecuritySettings",
      "required": [
        "encryptedDeviceAdminPassword",
        "encryptionCertificateThumbprint"
      ],
      "type": "object",
      "properties": {
        "encryptedDeviceAdminPassword": {
          "description": "Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to log into the \r\n            local web UI of the device. Actual password could have at least 8 characters that are a combination of \r\n            uppercase, lowercase, numeric, and special characters",
          "type": "string"
        },
        "encryptionCertificateThumbprint": {
          "description": "Public key thumbprint of the certificate used to encrypt the device admin password",
          "type": "string"
        }
      }
    },
    "SendTestAlertEmailRequest": {
      "description": "request for sending test alert email",
      "required": [
        "emailList"
      ],
      "type": "object",
      "properties": {
        "emailList": {
          "description": "list of emails to send the test alerts",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageAccountCredential": {
      "description": "The storage account credential",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountCredentialProperties",
          "description": "Credential properties",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "StorageAccountCredentialList": {
      "description": "Collection of Storage account credential entities",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountCredential"
          }
        }
      }
    },
    "StorageAccountCredentialProperties": {
      "description": "Storage account properties",
      "required": [
        "cloudType",
        "endPoint",
        "login",
        "enableSSL"
      ],
      "type": "object",
      "properties": {
        "cloudType": {
          "description": "Gets or sets the cloud service provider",
          "enum": [
            "Azure",
            "S3",
            "S3_RRS",
            "OpenStack",
            "HP"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloudType",
            "modelAsString": false
          }
        },
        "endPoint": {
          "description": "Gets or sets the storage endpoint",
          "type": "string"
        },
        "login": {
          "description": "Gets or sets the storage account login",
          "type": "string"
        },
        "location": {
          "description": "Gets or set the storage account's geo location",
          "type": "string"
        },
        "enableSSL": {
          "description": "Gets or sets whether SSL needs to enable or not",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslStatus",
            "modelAsString": false
          }
        },
        "password": {
          "description": "Gets or sets the storage account encrypted password",
          "type": "string"
        },
        "passwordEncrpyptionCertificateThumbprint": {
          "description": "Gets or sets the storage account password encryption thumbprint",
          "type": "string"
        }
      }
    },
    "StorageDomain": {
      "description": "The storage domain.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageDomainProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "StorageDomainProperties": {
      "description": "The storage domain properties.",
      "required": [
        "storageAccountCredentialIds",
        "compressionStatus",
        "encryptionStatus"
      ],
      "type": "object",
      "properties": {
        "storageAccountCredentialIds": {
          "description": "Gets or sets the storage account credentials.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encryptionKey": {
          "description": "Gets or sets the encryption key.",
          "type": "string"
        },
        "compressionStatus": {
          "description": "Gets or sets whether compression is \"enabled\" or \"disabled\".",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CompressionStatus",
            "modelAsString": false
          }
        },
        "encryptionStatus": {
          "description": "Gets or sets whether encryption is \"enabled\" or \"disabled\".",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        }
      }
    },
    "StorageDomains": {
      "description": "Collection of storage domains",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageDomain"
          }
        }
      }
    },
    "SupportPackageRequest": {
      "description": "Support package request entity",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SupportPackageRequestProperties",
          "description": "Support Package Request properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SupportPackageRequestProperties": {
      "description": "Support Package properties",
      "required": [
        "sdpPassKey"
      ],
      "type": "object",
      "properties": {
        "sdpPassKey": {
          "description": "Gets or sets SDPPassKey",
          "type": "string"
        },
        "packageType": {
          "description": "Gets or sets Support PackageType",
          "enum": [
            "Invalid",
            "IncludeDefault",
            "IncludeAll",
            "Mini",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SupportPackageType",
            "modelAsString": false
          }
        },
        "maximumTimeStamp": {
          "format": "date-time",
          "description": "Gets or sets MaximumTimeStamp",
          "type": "string"
        },
        "minimumTimeStamp": {
          "format": "date-time",
          "description": "Gets or sets MinimumTimeStamp",
          "type": "string"
        },
        "includeArchived": {
          "description": "Gets or sets IncludeArchived",
          "type": "boolean"
        },
        "sourceType": {
          "description": "Gets or sets Support Package Source Type",
          "enum": [
            "Invalid",
            "OpsTriggered",
            "ClientTriggered"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SupportPackageSourceType",
            "modelAsString": false
          }
        },
        "customIncludeList": {
          "description": "Gets or sets list of log categories",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Time": {
      "description": "The Time.",
      "required": [
        "hour",
        "minute"
      ],
      "type": "object",
      "properties": {
        "hour": {
          "format": "int32",
          "description": "The hour.",
          "maximum": 23,
          "minimum": 0,
          "type": "integer"
        },
        "minute": {
          "format": "int32",
          "description": "The minute.",
          "maximum": 59,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "TimeSettings": {
      "description": "Model to represent the TimeSettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TimeSettingsProperties",
          "description": "properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TimeSettingsProperties": {
      "description": "Class containing the properties of TimeSettings",
      "required": [
        "timeZone",
        "primaryTimeServer"
      ],
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "Gets or sets the timezone for Helsinki device.",
          "type": "string"
        },
        "primaryTimeServer": {
          "description": "Gets or sets the primary time server for Helsinki device.",
          "type": "string"
        },
        "secondaryTimeServer": {
          "description": "Gets or sets the secondary time server for Helsinki device.",
          "type": "string"
        }
      }
    },
    "UpdateDownloadProgress": {
      "description": "details available during the download",
      "type": "object",
      "properties": {
        "downloadPhase": {
          "enum": [
            "Unknown",
            "Initializing",
            "Downloading",
            "Verifying"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DownloadPhase",
            "modelAsString": false
          }
        },
        "percentComplete": {
          "format": "int32",
          "type": "integer"
        },
        "totalBytesToDownload": {
          "format": "double",
          "type": "number"
        },
        "totalBytesDownloaded": {
          "format": "double",
          "type": "number"
        },
        "numberOfUpdatesToDownload": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfUpdatesDownloaded": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UpdateInstallProgress": {
      "description": "Class representing the progress during installation of updates",
      "type": "object",
      "properties": {
        "percentComplete": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfUpdatesToInstall": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfUpdatesInstalled": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Updates": {
      "description": "The updates profile",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdatesProperties",
          "description": "Update properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "UpdatesProperties": {
      "description": "Properties of the update profile",
      "type": "object",
      "properties": {
        "deviceVersion": {
          "description": "Gets or sets the current Device HCS version\r\n            This property is retrieved from ApplianceInfo object's \"DeviceHcsVersion\" property",
          "type": "string"
        },
        "deviceLastScannedTime": {
          "format": "date-time",
          "description": "Gets or sets the time when the appliance did a MU scan\r\n            The difference between LastDeviceScannedTime and LastCompletedScanJobTime is that the former is sent directly from the appliance\r\n            whereas LastCompletedScanJobTime is computed from the service side using the Job.\"Stopped\" field",
          "type": "string"
        },
        "regularUpdatesAvailable": {
          "description": "Set to true if regular updates were detected in MU for the current version of the device\r\n            Service will set this flag based on whether the UpdateItemCollection returned as result of scan was null or not",
          "type": "boolean"
        },
        "rebootRequiredForInstall": {
          "description": "Set to true if RegularUpdatesAvailable is true and if atleast one of the updateItems detected has IsRebootActuallyNeeded = true",
          "type": "boolean"
        },
        "totalItemsPendingForDownload": {
          "format": "int32",
          "description": "The total number of items pending for download",
          "type": "integer"
        },
        "totalItemsPendingForInstall": {
          "format": "int32",
          "description": "The total number of items pending for install",
          "type": "integer"
        },
        "status": {
          "description": "Gets or sets the current update operation.",
          "enum": [
            "Idle",
            "Scanning",
            "Downloading",
            "Installing"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UpdateOperation",
            "modelAsString": false
          }
        },
        "lastCompletedScanTime": {
          "format": "date-time",
          "description": "Gets or sets the time when the last scan job was completed (success/cancelled/failed) on the appliance",
          "type": "string"
        },
        "lastCompletedDownloadJobTime": {
          "format": "date-time",
          "description": "Gets or sets the time when the last Download job was completed (success/cancelled/failed) on the appliance",
          "type": "string"
        },
        "lastCompletedInstallJobTime": {
          "format": "date-time",
          "description": "Gets or sets the time when the last Install job was completed (success/cancelled/failed) on the appliance",
          "type": "string"
        },
        "inProgressDownloadJobId": {
          "description": "if a download is in progress, this field contains the JobId of that particular download job",
          "type": "string"
        },
        "inProgressInstallJobId": {
          "description": "if an install is in progress, this field contains the JobId of that particular install job",
          "type": "string"
        },
        "inProgressScanStartedTime": {
          "format": "date-time",
          "description": "Gets or sets the time when the currently running scan job (if any) started",
          "type": "string"
        },
        "inProgressDownloadJobStartedTime": {
          "format": "date-time",
          "description": "Gets or sets the time when the currently running download job (if any) started",
          "type": "string"
        },
        "inProgressInstallJobStartedTime": {
          "format": "date-time",
          "description": "Gets or sets the time when the currently running install job (if any) started",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API Version",
      "required": true,
      "type": "string"
    },
    "providerNamespaceParameter": {
      "name": "providerNamespace",
      "in": "path",
      "description": "The Provider Namespace",
      "required": true,
      "type": "string",
      "default": "Microsoft.StorSimple"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The Resource Group Name",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Subscription Id",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}