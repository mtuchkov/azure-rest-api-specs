{
  "swagger": "2.0",
  "info": {
    "version": "2016-06-01",
    "title": "StorSimpleManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/{providerNamespace}/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Retrieves all the managers in a subscription.",
        "operationId": "Managers_ListBySubscription",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Managers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Retrieves all the managers in a resource group.",
        "operationId": "Managers_ListByResourceGroup",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Managers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Returns the properties of the specified manager name.",
        "operationId": "Managers_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Creates or updates the manager.",
        "operationId": "Managers_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Manager",
            "in": "body",
            "description": "The manager.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Deletes the manager.",
        "operationId": "Managers_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves all the devices in a manager.",
        "operationId": "Devices_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Returns the properties of the specified device name.",
        "operationId": "Devices_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes the device.",
        "operationId": "Devices_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "summary": "Patches the device.",
        "operationId": "Devices_Patch",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devicePatch",
            "in": "body",
            "description": "Patch representation of the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePatch"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/backupScheduleGroups": {
      "get": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Retrieves all the backup schedule groups in a device.",
        "operationId": "BackupScheduleGroups_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroups"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}": {
      "get": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Returns the properties of the specified backup schedule group name.",
        "operationId": "BackupScheduleGroups_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Creates or Updates the backup schedule Group.",
        "operationId": "BackupScheduleGroups_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroup",
            "in": "body",
            "description": "The schedule group to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "summary": "Deletes the backup schedule group.",
        "operationId": "BackupScheduleGroups_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Retrieves all the file servers in a device.",
        "operationId": "FileServers_ListAtDevice",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Returns the properties of the specified file server name.",
        "operationId": "FileServers_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "FileServers"
        ],
        "summary": "Creates or updates the file server.",
        "operationId": "FileServers_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServer",
            "in": "body",
            "description": "The file server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "FileServers"
        ],
        "summary": "Deletes the file server.",
        "operationId": "FileServers_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Retrieves all the file shares in a file server.",
        "operationId": "FileShares_ListAtFileServer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileShares"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Returns the properties of the specified file share name.",
        "operationId": "FileShares_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "FileShares"
        ],
        "summary": "Creates or updates the file share.",
        "operationId": "FileShares_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileShare",
            "in": "body",
            "description": "The file share.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "FileShares"
        ],
        "summary": "Deletes the file share.",
        "operationId": "FileShares_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/networkSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Returns the network settings of the specified device name.",
        "operationId": "DeviceSettings_GetNetworkSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/securitySettings/default/update": {
      "post": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Creates or updates the security settings.",
        "operationId": "DeviceSettings_CreateOrUpdateSecuritySettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securitySettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/shares": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "summary": "Retrieves all the file shares in a device.",
        "operationId": "FileShares_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of FileShare objects in a device",
            "schema": {
              "$ref": "#/definitions/FileShares"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/devices/{deviceName}/timeSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "summary": "Returns the time settings of the specified device name.",
        "operationId": "DeviceSettings_GetTimeSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TimeSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/encryptionSettings/default": {
      "get": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Returns the encryption settings of the manager.",
        "operationId": "ManagerKeys_GetEncryptionSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EncryptionSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/extendedInformation/vaultExtendedInfo": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Returns the extended information of the specified manager name.",
        "operationId": "Managers_GetExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Creates the extended info of the manager.",
        "operationId": "Managers_CreateExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ManagerExtendedInfo",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Deletes the extended info of the manager.",
        "operationId": "Managers_DeleteExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "summary": "Updates the extended info of the manager.",
        "operationId": "Managers_UpdateExtendedInfo",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ManagerExtendedInfo",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Pass the ETag of ExtendedInfo fetched from GET call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/fileservers": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "summary": "Retrieves all the file servers in a manager.",
        "operationId": "FileServers_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileServers"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/getActivationKey": {
      "post": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Returns the activation key of the manager.",
        "operationId": "ManagerKeys_GetActivationKey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/getEncryptionKey": {
      "post": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Returns the encryption key of the manager.",
        "operationId": "ManagerKeys_GetEncryptionKey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EncryptionKey"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/regenerateActivationKey": {
      "post": {
        "tags": [
          "ManagerKeys"
        ],
        "summary": "Re-generates and returns the activation key of the manager.",
        "operationId": "ManagerKeys_RegenerateActivationKey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageAccountCredentials": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "operationId": "StorageAccountCredentials_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredentialList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageAccountCredentials/{credentialName}": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Returns the properties of the specified storage account credential name.",
        "operationId": "StorageAccountCredentials_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The name of storage account credential to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Creates or updates the storage account credential",
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The credential name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccount",
            "in": "body",
            "description": "The storage account credential to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Deletes the storage account credential",
        "operationId": "StorageAccountCredentials_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The name of the storage account credential.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageDomains": {
      "get": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Retrieves all the storage domains in a manager.",
        "operationId": "StorageDomains_List",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageDomains"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/managers/{managerName}/storageDomains/{storageDomainName}": {
      "get": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Returns the properties of the specified storage domain name.",
        "operationId": "StorageDomains_Get",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Creates or updates the storage domain.",
        "operationId": "StorageDomains_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageDomain",
            "in": "body",
            "description": "The storageDomain.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          },
          "202": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StorageDomains"
        ],
        "summary": "Deletes the storage domain.",
        "operationId": "StorageDomains_Delete",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "path",
            "description": "The manager name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/providerNamespaceParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "BackupScheduleGroup": {
      "description": "The Backup Schedule Group",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupScheduleGroupProperties",
          "description": "Properties of BackupScheduleGroup",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "BackupScheduleGroupProperties": {
      "description": "The Backup Schedule Group Properties",
      "required": [
        "startTime"
      ],
      "type": "object",
      "properties": {
        "startTime": {
          "$ref": "#/definitions/Time",
          "description": "Gets or sets the start time.\r\n            When this field is specified we will generate Default GrandFather Father Son Backup Schedules."
        }
      }
    },
    "BackupScheduleGroups": {
      "description": "The list response of backup schedule groups",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupScheduleGroup"
          }
        }
      }
    },
    "Device": {
      "description": "Represents a StorSimple device object along with its properties",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceProperties",
          "description": "Collection of properties for the device",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DeviceDetails": {
      "description": "Class containing more granular details about the device",
      "type": "object",
      "properties": {
        "endpointCount": {
          "format": "int32",
          "description": "Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)",
          "type": "integer"
        },
        "totalStorageInBytes": {
          "format": "int64",
          "description": "Total storage available on the device in bytes.",
          "type": "integer"
        },
        "totalLocalStorageInBytes": {
          "format": "int64",
          "description": "Total local storage capacity in device",
          "type": "integer"
        },
        "provisionedStorageInBytes": {
          "format": "int64",
          "description": "Storage in bytes that has been provisioned on the device including both local and cloud",
          "type": "integer"
        },
        "provisionedLocalStorageInBytes": {
          "format": "int64",
          "description": "Storage in bytes that has been provisioned locally on the device",
          "type": "integer"
        },
        "usingStorageInBytes": {
          "format": "int64",
          "description": "Storage that is being currently used in bytes including both local and cloud",
          "type": "integer"
        },
        "usingLocalStorageInBytes": {
          "format": "int64",
          "description": "Local Storage that is being currently used in bytes",
          "type": "integer"
        },
        "totalBackupSizeInBytes": {
          "format": "int64",
          "description": "Total size taken up by backups in bytes",
          "type": "integer"
        },
        "availableStorageInBytes": {
          "format": "int64",
          "description": "Total pending available storage on the device in bytes",
          "type": "integer"
        },
        "availableLocalStorageInBytes": {
          "format": "int64",
          "description": "Local pending storage available on the device in bytes",
          "type": "integer"
        }
      }
    },
    "DeviceList": {
      "description": "Collection of Devices",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        }
      }
    },
    "DevicePatch": {
      "description": "Class that represents the Input for the PATCH call on Device\r\n            Currently the only patchable property on device is \"DeviceDescription\"",
      "type": "object",
      "properties": {
        "deviceDescription": {
          "description": "Short description given for the device",
          "type": "string"
        }
      }
    },
    "DeviceProperties": {
      "description": "Encases all the properties of the Device",
      "type": "object",
      "properties": {
        "activationTime": {
          "format": "date-time",
          "description": "The UTC time at which the device was activated",
          "type": "string"
        },
        "allowedDeviceOperations": {
          "description": "Operations that are allowed on the device based on its current state",
          "type": "array",
          "items": {
            "enum": [
              "None",
              "Delete",
              "DeleteWithWarning",
              "Decommission",
              "DRSource",
              "DRTarget",
              "Browsable",
              "ReadOnlyForDR"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DeviceOperation",
              "modelAsString": false
            }
          }
        },
        "culture": {
          "description": "Language culture setting on the device",
          "type": "string"
        },
        "deviceCapabilities": {
          "description": "Device can be configured either as FileServer or IscsiServer",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "FileServer",
              "IscsiServer"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "SupportedDeviceCapabilities",
              "modelAsString": false
            }
          }
        },
        "deviceDescription": {
          "description": "Short description given for the device",
          "type": "string"
        },
        "domainName": {
          "description": "Fully qualified name of the domain to which the device is attached",
          "type": "string"
        },
        "deviceSoftwareVersion": {
          "description": "Version number of the software running on the device",
          "type": "string"
        },
        "friendlySoftwareName": {
          "description": "Friendly name for the software version",
          "type": "string"
        },
        "deviceConfigurationStatus": {
          "description": "\"Complete\" if the device has been successfully registered as File/IscsiServer and the creation of share/volume is complete\r\n            \"Pending\" if the device is only registered but the creation of share/volume is complete is still pending",
          "enum": [
            "Complete",
            "Pending"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceConfigurationStatus",
            "modelAsString": false
          }
        },
        "modelDescription": {
          "description": "Name of the device model",
          "type": "string"
        },
        "status": {
          "description": "Current status of the device",
          "enum": [
            "Unknown",
            "Online",
            "Offline",
            "Decommissioned",
            "RequiresAttention",
            "MaintenanceMode",
            "Creating",
            "Provisioning",
            "Decommissioning",
            "Deleted",
            "PendingConfiguration"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceStatus",
            "modelAsString": false
          }
        },
        "type": {
          "description": "Type of the device",
          "enum": [
            "Invalid",
            "Appliance",
            "VirtualAppliance",
            "HelsinkiOnPremVirtualAppliance",
            "HelsinkiVirtualAppliance",
            "HelsinkiPhysicalAppliance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceType",
            "modelAsString": false
          }
        },
        "details": {
          "$ref": "#/definitions/DeviceDetails",
          "description": "subclass containing more storage-related information about the device\r\n            This field will be populated only if the get call is made with $expand = details"
        }
      }
    },
    "EncryptionKey": {
      "description": "Model to represent the EncryptionKey for a manager",
      "required": [
        "encryptionAlgorithm"
      ],
      "type": "object",
      "properties": {
        "encryptionAlgorithm": {
          "description": "Gets or sets the encryption algorithm which was used to encrypt the EncodedPublicKey.",
          "enum": [
            "None",
            "AES256"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": false
          }
        },
        "encryptedPublicKey": {
          "description": "Gets or sets the encrypted public key.",
          "type": "string"
        },
        "certificateThumbprint": {
          "description": "Gets or sets the thumbprint.",
          "type": "string"
        }
      }
    },
    "EncryptionSettings": {
      "description": "Model to represent the EncryptionSettings",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EncryptionSettingsProperties",
          "description": "properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "EncryptionSettingsProperties": {
      "description": "Class containing the properties of EncryptionSettings",
      "required": [
        "encryptionStatus",
        "keyRolloverStatus"
      ],
      "type": "object",
      "properties": {
        "encryptionStatus": {
          "description": "Gets or sets the encryption status which indicates if encryption is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        },
        "keyRolloverStatus": {
          "description": "Gets or sets the key rollover status which indicates if key rollover is required or not.\r\n            If secrets encryption has been upgraded, then it requires key rollover.",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyRolloverStatus",
            "modelAsString": false
          }
        }
      }
    },
    "FileServer": {
      "description": "The file server.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileServerProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FileServerProperties": {
      "description": "The file server properties.",
      "required": [
        "domainName",
        "storageDomainId",
        "backupScheduleGroupId"
      ],
      "type": "object",
      "properties": {
        "domainName": {
          "description": "Domain of the file server",
          "type": "string"
        },
        "storageDomainId": {
          "description": "Gets or sets the storage domain id.",
          "type": "string"
        },
        "backupScheduleGroupId": {
          "description": "Gets or sets the backup policy id.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description of the file server",
          "type": "string"
        }
      }
    },
    "FileServers": {
      "description": "Collection of file servers",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileServer"
          }
        }
      }
    },
    "FileShare": {
      "description": "The File Share.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileShareProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FileShareProperties": {
      "description": "The File Share.",
      "required": [
        "shareStatus",
        "dataPolicy",
        "adminUser",
        "provisionedCapacityInBytes",
        "tieringThresholdInBytes",
        "monitoringStatus"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Gets or sets description for file share",
          "type": "string"
        },
        "shareStatus": {
          "description": "Gets or sets Share Status",
          "enum": [
            "Online",
            "Offline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareStatus",
            "modelAsString": false
          }
        },
        "dataPolicy": {
          "description": "Gets or sets data policy",
          "enum": [
            "Invalid",
            "Local",
            "Tiered",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": false
          }
        },
        "adminUser": {
          "description": "Gets or sets user/group who will have full permission in this share\r\n            Active directory email address. Example: xyz@microsoft.com or Fareast\\xyz\r\n            Create and Read only field.",
          "type": "string"
        },
        "provisionedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets total provisioned capacity in Bytes",
          "type": "integer"
        },
        "usedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets used capacity in Bytes\r\n            Read only",
          "type": "integer"
        },
        "localUsedCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets used capacity in Bytes\r\n            Read only",
          "type": "integer"
        },
        "tieringThresholdInBytes": {
          "format": "int64",
          "description": "Gets or sets tiering threshold in Bytes\r\n            Portal will have slider to select this percentage (not supported in v1)",
          "type": "integer"
        },
        "monitoringStatus": {
          "description": "Gets or sets the monitoring.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": false
          }
        }
      }
    },
    "FileShares": {
      "description": "Collection of file shares",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileShare"
          }
        }
      }
    },
    "IPConfig": {
      "description": "Class containing details related to the IP address configuration",
      "required": [
        "ipAddress",
        "gateway"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "Gets or sets the ipaddress of the network adapter.",
          "type": "string"
        },
        "prefixLength": {
          "format": "int32",
          "description": "Gets or sets the prefix length of the network adapter.",
          "type": "integer"
        },
        "gateway": {
          "description": "Gets or sets the gateway of the network adapter.",
          "type": "string"
        },
        "ipConfigStatus": {
          "description": "Gets or sets the ipconfig status of the network adapter.",
          "type": "string"
        }
      }
    },
    "Key": {
      "description": "Model to represent the Key",
      "required": [
        "activationKey"
      ],
      "type": "object",
      "properties": {
        "activationKey": {
          "description": "Gets or sets the activation key for Series-9000 device",
          "type": "string"
        }
      }
    },
    "Manager": {
      "description": "Model of the Manager",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerProperties",
          "description": "List of properties of the Manager",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "ETag of the Manager",
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfo": {
      "description": "Model of the ManagerExtendedInfo",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerExtendedInfoProperties",
          "description": "XML Serialized string containing the following properties:\r\n            Algorithm, ChannelEncryptionKey, ChannelIntegrationKey,Version",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "ETag of the Resource",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfoProperties": {
      "description": "Contains properties of the ManagerExtendedInfo object",
      "type": "object",
      "properties": {
        "version": {
          "description": "Represents the version of the ExtendedInfo object being persisted",
          "type": "string"
        },
        "integrityKey": {
          "description": "Represents the CIK of the resource",
          "type": "string"
        },
        "encryptionKey": {
          "description": "Represents the CEK of the resource",
          "type": "string"
        },
        "encryptionKeyThumbprint": {
          "description": "Represents the Cert thumbprint that was used to encrypt the CEK",
          "type": "string"
        },
        "portalCertificateThumbprint": {
          "description": "Represents the thumbprint of the portal thumbprint which can be optionally\r\n            used to encrypt the entire data before persisting in core services DB",
          "type": "string"
        },
        "algorithm": {
          "description": "Represents the encryption algorithm used to encrypt the other keys\r\n            None - if EncryptionKey is saved in plain text format\r\n            AlgorithmName - if encryption is used",
          "type": "string"
        }
      }
    },
    "ManagerIntrinsicSettings": {
      "description": "Intrinsic settings which refers to the type of the Storsimple manager",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Refers to the type of the StorSimple Manager",
          "enum": [
            "GardaV1",
            "HelsinkiV1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagerType",
            "modelAsString": false
          }
        }
      }
    },
    "ManagerProperties": {
      "type": "object",
      "properties": {
        "cisIntrinsicSettings": {
          "$ref": "#/definitions/ManagerIntrinsicSettings",
          "description": "Specifies if the Manager is Garda or Helsinki"
        },
        "sku": {
          "$ref": "#/definitions/Managersku",
          "description": "Specifies the name of the sku"
        },
        "provisioningState": {
          "description": "Specifies the state of the resouce as it is getting provisioned\r\n            Value of \"Succeeded\" means the Manager was successfully created",
          "type": "string"
        }
      }
    },
    "Managers": {
      "description": "Model to represent a list of storsimple Managers under a particular resourceGroup",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Manager"
          }
        }
      }
    },
    "Managersku": {
      "description": "Sku object which is part of the Manager",
      "type": "object",
      "properties": {
        "name": {
          "description": "Refers to the sku name which should be \"standard\"",
          "type": "string"
        }
      }
    },
    "NetworkAdapter": {
      "description": "Represents a networkAdapter in a particular node.",
      "required": [
        "networkAdapterName",
        "dhcpStatus"
      ],
      "type": "object",
      "properties": {
        "networkAdapterName": {
          "description": "Gets or sets the name of the network adapter.",
          "type": "string"
        },
        "iPv4Info": {
          "$ref": "#/definitions/IPConfig",
          "description": "Gets or sets the ipv4configuration of the network adapter."
        },
        "iPv6Info": {
          "$ref": "#/definitions/IPConfig",
          "description": "Gets or sets the ipv6configuration of the network adapter."
        },
        "dhcpStatus": {
          "description": "Gets or sets the flag which represents state of DHCP.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DhcpStatus",
            "modelAsString": false
          }
        },
        "linkSpeed": {
          "format": "int64",
          "description": "Gets or sets the speed of the network adapter.",
          "type": "integer"
        }
      }
    },
    "NetworkSettings": {
      "description": "Model to represent the NetworkSettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsProperties",
          "description": "Properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "NetworkSettingsProperties": {
      "description": "Class containing the properties of NetworkSettings",
      "required": [
        "primaryDNSServer",
        "nodeNetworks"
      ],
      "type": "object",
      "properties": {
        "primaryDNSServer": {
          "description": "Gets or sets the Primary DNS server for the appliance",
          "type": "string"
        },
        "secondaryDNSServer": {
          "description": "Gets or sets the secondary DNS server for the appliance",
          "type": "string"
        },
        "nodeNetworks": {
          "description": "Gets or sets the NetworkAdapters under each node of the device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeNetwork"
          }
        }
      }
    },
    "NodeNetwork": {
      "description": "Represents a single node in a device. In Helsinki VA, only 1 Node is present",
      "required": [
        "networkAdapters"
      ],
      "type": "object",
      "properties": {
        "networkAdapters": {
          "description": "Gets or sets the list of network adapters in the node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAdapter"
          }
        }
      }
    },
    "Resource": {
      "description": "The Azure Resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The Resource Id",
          "type": "string"
        },
        "name": {
          "description": "The Resource Name",
          "type": "string"
        },
        "type": {
          "description": "The Resource type",
          "type": "string"
        },
        "location": {
          "description": "The Geo location of the Manager",
          "type": "string"
        },
        "tags": {
          "description": "Tags attached to the Manager",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "SecuritySettings": {
      "description": "Model to represent the SecuritySettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsProperties",
          "description": "Properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SecuritySettingsProperties": {
      "description": "Class containing the properties for SecuritySettings",
      "required": [
        "encryptedDeviceAdminPassword",
        "encryptionCertificateThumbprint"
      ],
      "type": "object",
      "properties": {
        "encryptedDeviceAdminPassword": {
          "description": "Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to log into the \r\n            local web UI of the device. Actual password could have at least 8 characters that are a combination of \r\n            uppercase, lowercase, numeric, and special characters",
          "type": "string"
        },
        "encryptionCertificateThumbprint": {
          "description": "Public key thumbprint of the certificate used to encrypt the device admin password",
          "type": "string"
        }
      }
    },
    "StorageAccountCredential": {
      "description": "The storage account credential",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountCredentialProperties",
          "description": "Credential properties",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "StorageAccountCredentialList": {
      "description": "Collection of Storage account credential entities",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountCredential"
          }
        }
      }
    },
    "StorageAccountCredentialProperties": {
      "description": "Storage account properties",
      "required": [
        "cloudType",
        "endPoint",
        "login",
        "enableSSL"
      ],
      "type": "object",
      "properties": {
        "cloudType": {
          "description": "Gets or sets the cloud service provider",
          "enum": [
            "Azure",
            "S3",
            "S3_RRS",
            "OpenStack",
            "HP"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloudType",
            "modelAsString": false
          }
        },
        "endPoint": {
          "description": "Gets or sets the storage endpoint",
          "type": "string"
        },
        "login": {
          "description": "Gets or sets the storage account login",
          "type": "string"
        },
        "location": {
          "description": "Gets or set the storage account's geo location",
          "type": "string"
        },
        "enableSSL": {
          "description": "Gets or sets whether SSL needs to enable or not",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslStatus",
            "modelAsString": false
          }
        },
        "password": {
          "description": "Gets or sets the storage account encrypted password",
          "type": "string"
        },
        "passwordEncrpyptionCertificateThumbprint": {
          "description": "Gets or sets the storage account password encryption thumbprint",
          "type": "string"
        }
      }
    },
    "StorageDomain": {
      "description": "The storage domain.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageDomainProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "StorageDomainProperties": {
      "description": "The storage domain properties.",
      "required": [
        "storageAccountCredentialIds",
        "compressionStatus",
        "encryptionStatus"
      ],
      "type": "object",
      "properties": {
        "storageAccountCredentialIds": {
          "description": "Gets or sets the storage account credentials.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encryptionKey": {
          "description": "Gets or sets the encryption key.",
          "type": "string"
        },
        "compressionStatus": {
          "description": "Gets or sets whether compression is \"enabled\" or \"disabled\".",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CompressionStatus",
            "modelAsString": false
          }
        },
        "encryptionStatus": {
          "description": "Gets or sets whether encryption is \"enabled\" or \"disabled\".",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        }
      }
    },
    "StorageDomains": {
      "description": "Collection of storage domains",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageDomain"
          }
        }
      }
    },
    "Time": {
      "description": "The Time.",
      "required": [
        "hour",
        "minute"
      ],
      "type": "object",
      "properties": {
        "hour": {
          "format": "int32",
          "description": "The hour.",
          "maximum": 23,
          "minimum": 0,
          "type": "integer"
        },
        "minute": {
          "format": "int32",
          "description": "The minute.",
          "maximum": 59,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "TimeSettings": {
      "description": "Model to represent the TimeSettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TimeSettingsProperties",
          "description": "properties are encased in this object",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TimeSettingsProperties": {
      "description": "Class containing the properties of TimeSettings",
      "required": [
        "timeZone",
        "primaryTimeServer"
      ],
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "Gets or sets the timezone for Helsinki device.",
          "type": "string"
        },
        "primaryTimeServer": {
          "description": "Gets or sets the primary time server for Helsinki device.",
          "type": "string"
        },
        "secondaryTimeServer": {
          "description": "Gets or sets the secondary time server for Helsinki device.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API Version",
      "required": true,
      "type": "string"
    },
    "providerNamespaceParameter": {
      "name": "providerNamespace",
      "in": "path",
      "description": "The Provider Namespace",
      "required": true,
      "type": "string",
      "default": "Microsoft.StorSimple"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The Resource Group Name",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Subscription Id",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}