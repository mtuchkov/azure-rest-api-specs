{
	"swagger": "2.0",
	"info": {
		"version": "2016-06-01",
		"title": "HybridDataManagementClient"
	},
	"host": "management.azure.com",
	"schemes": ["https"],
	"paths": {
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices": {
			"get": {
				"tags": ["DataServices"],
				"summary": "This method gets all the data services.",
				"operationId": "DataServices_List",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where data service exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DataServiceList"
						}
					}
				},
				"deprecated": false,
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}": {
			"get": {
				"tags": ["DataServices"],
				"summary": "This method gets data service by name.",
				"operationId": "DataServices_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where data service exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The data service name queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DataService"
						}
					}
				},
				"deprecated": false
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataStores/{dataStoreName}": {
			"get": {
				"tags": ["DataStores"],
				"summary": "This method gets data store by name.",
				"operationId": "DataStores_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where data store exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataStoreName",
					"in": "path",
					"description": "The data store name queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DataStore"
						}
					}
				},
				"deprecated": false
			},
			"put": {
				"tags": ["DataStores"],
				"summary": "This method creates or updates the data store",
				"operationId": "DataStores_CreateOrUpdate",
				"consumes": ["application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where data store exists",
					"required": true,
					"type": "string"
				}, {
					"name": "dataStoreName",
					"in": "path",
					"description": "The data store name",
					"required": true,
					"type": "string"
				}, {
					"name": "dataStore",
					"in": "body",
					"description": "The data store object to be created or updated.",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DataStore"
					}
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DataStore"
						}
					},
					"202": {
						"description": "Accepted"
					}
				},
				"deprecated": false,
				"x-ms-long-running-operation": true
			},
			"delete": {
				"tags": ["DataStores"],
				"summary": "This method deletes the data store",
				"operationId": "DataStores_Delete",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "resource where data store exist",
					"required": true,
					"type": "string"
				}, {
					"name": "dataStoreName",
					"in": "path",
					"description": "The data store name to be deleted",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"x-ms-long-running-operation": true
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataStores": {
			"get": {
				"tags": ["DataStores"],
				"summary": "This method gets all the data stores.",
				"operationId": "DataStores_List",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where data store exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}, {
					"name": "$top",
					"in": "query",
					"description": "$top is supported",
					"required": false,
					"type": "integer",
					"format": "int32"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DataStoreList"
						}
					}
				},
				"deprecated": false,
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataStoreTypes": {
			"get": {
				"tags": ["DataStoreTypes"],
				"summary": "This method gets all the data store types.",
				"operationId": "DataStoreTypes_List",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where data store type exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DataStoreTypeList"
						}
					}
				},
				"deprecated": false,
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataStoreTypes/{dataStoreTypeName}": {
			"get": {
				"tags": ["DataStoreTypes"],
				"summary": "This method gets data store type by name.",
				"operationId": "DataStoreTypes_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where data store type exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataStoreTypeName",
					"in": "path",
					"description": "The data store type name queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DataStoreType"
						}
					}
				},
				"deprecated": false
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}": {
			"get": {
				"tags": ["JobDefinitions"],
				"summary": "This method gets job definition by name.",
				"operationId": "JobDefinitions_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job definition exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The data service name of the job definition",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "The job definition name queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JobDefinition"
						}
					}
				},
				"deprecated": false
			},
			"put": {
				"tags": ["JobDefinitions"],
				"summary": "This method creates or updates the job definition",
				"operationId": "JobDefinitions_CreateOrUpdate",
				"consumes": ["application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job definition exist",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The data service type of the job definition",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "The job definition name",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinition",
					"in": "body",
					"description": "Job Definition object to be created or updated.",
					"required": true,
					"schema": {
						"$ref": "#/definitions/JobDefinition"
					}
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JobDefinition"
						}
					},
					"202": {
						"description": "Accepted"
					}
				},
				"deprecated": false,
				"x-ms-long-running-operation": true
			},
			"delete": {
				"tags": ["JobDefinitions"],
				"summary": "This method deletes the job definition",
				"operationId": "JobDefinitions_Delete",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job definition exist",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The data service type of the job definition",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "The job definition name to be deleted",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"x-ms-long-running-operation": true
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobDefinitions": {
			"get": {
				"tags": ["JobDefinitions"],
				"summary": "This method gets all the job definitions at data service level.",
				"operationId": "JobDefinitions_List",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job definitions exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The data service type of the job definition",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}, {
					"name": "$filter",
					"in": "query",
					"description": "OData Filter options",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JobDefinitionList"
						}
					}
				},
				"deprecated": false,
				"x-ms-odata": "#/definitions/JobDefinitionFilter",
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/jobDefinitions": {
			"get": {
				"tags": ["JobDefinitions"],
				"summary": "This method gets all the job definitions at data manager level.",
				"operationId": "JobDefinitions_ListAtDataManager",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job definitions exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}, {
					"name": "$filter",
					"in": "query",
					"description": "OData Filter options",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JobDefinitionList"
						}
					}
				},
				"deprecated": false,
				"x-ms-odata": "#/definitions/JobDefinitionFilter",
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/run": {
			"post": {
				"tags": ["JobDefinitions"],
				"summary": "This method runs a job on the job definition.",
				"operationId": "JobDefinitions_Run",
				"consumes": ["application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded"],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job definition exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The data service type of the job definition.",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "Name of the job definition.",
					"required": true,
					"type": "string"
				}, {
					"name": "runParameters",
					"in": "body",
					"description": "Run time parameters for the job definition.",
					"required": true,
					"schema": {
						"$ref": "#/definitions/RunParameters"
					}
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"x-ms-long-running-operation": true
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/jobs": {
			"get": {
				"tags": ["Jobs"],
				"summary": "This method gets all the jobs at the data manager level.",
				"operationId": "Jobs_ListAtDataManager",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where jobs exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}, {
					"name": "$filter",
					"in": "query",
					"description": "OData Filter options",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JobList"
						}
					}
				},
				"deprecated": false,
				"x-ms-odata": "#/definitions/JobFilter",
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobs": {
			"get": {
				"tags": ["Jobs"],
				"summary": "This method gets all the jobs at the data service level.",
				"operationId": "Jobs_ListAtDataService",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where jobs exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The name of the data service under which job ran",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}, {
					"name": "$filter",
					"in": "query",
					"description": "OData Filter options",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JobList"
						}
					}
				},
				"deprecated": false,
				"x-ms-odata": "#/definitions/JobFilter",
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs": {
			"get": {
				"tags": ["Jobs"],
				"summary": "This method gets all the jobs at job definition level.",
				"operationId": "Jobs_List",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where jobs exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The name of the data service under which job ran",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "The name of the job definition under which the job ran",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}, {
					"name": "$filter",
					"in": "query",
					"description": "OData Filter options",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/JobList"
						}
					}
				},
				"deprecated": false,
				"x-ms-odata": "#/definitions/JobFilter",
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}": {
			"get": {
				"tags": ["Jobs"],
				"summary": "This method gets job by jobId.",
				"operationId": "Jobs_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The name of the data service under which job ran.",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "The name of the job definition under which the job ran",
					"required": true,
					"type": "string"
				}, {
					"name": "jobId",
					"in": "path",
					"description": "The job id of the job queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}, {
					"name": "$expand",
					"in": "query",
					"description": "$expand is supported",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Job"
						}
					}
				},
				"deprecated": false
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/cancel": {
			"post": {
				"tags": ["Jobs"],
				"summary": "This method executes the cancel action on the job.",
				"operationId": "Jobs_Cancel",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The name of the data service under which job ran.",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "The name of the job definition under which the job ran",
					"required": true,
					"type": "string"
				}, {
					"name": "jobId",
					"in": "path",
					"description": "The job id of the job queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"x-ms-long-running-operation": true
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/resume": {
			"post": {
				"tags": ["Jobs"],
				"summary": "This method executes the resume action on a job.",
				"operationId": "Jobs_Resume",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource where job exist.",
					"required": true,
					"type": "string"
				}, {
					"name": "dataServiceName",
					"in": "path",
					"description": "The name of the data service under which job ran.",
					"required": true,
					"type": "string"
				}, {
					"name": "jobDefinitionName",
					"in": "path",
					"description": "The name of the job definition under which the job ran",
					"required": true,
					"type": "string"
				}, {
					"name": "jobId",
					"in": "path",
					"description": "The job id of the job queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"x-ms-long-running-operation": true
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/operations": {
			"get": {
				"tags": ["Operations"],
				"summary": "This method gets all the operations.",
				"operationId": "Operations_List",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OperationList"
						}
					}
				},
				"deprecated": false,
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/operations/{operationName}": {
			"get": {
				"tags": ["Operations"],
				"summary": "This method gets operation by name.",
				"operationId": "Operations_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "operationName",
					"in": "path",
					"description": "The operation name queried.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Operation"
						}
					}
				},
				"deprecated": false
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/publicKeys": {
			"get": {
				"tags": ["PublicKeys"],
				"summary": "This method gets the list view of public keys, however it will only have one element.",
				"operationId": "PublicKeys_List",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource of the public keys.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PublicKeyList"
						}
					}
				},
				"deprecated": false,
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}/publicKeys/{publicKeyName}": {
			"get": {
				"tags": ["PublicKeys"],
				"summary": "This method gets the public keys.",
				"operationId": "PublicKeys_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Resource of the public keys.",
					"required": true,
					"type": "string"
				}, {
					"name": "publicKeyName",
					"in": "path",
					"description": "",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PublicKey"
						}
					}
				},
				"deprecated": false
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers": {
			"get": {
				"tags": ["Resources"],
				"summary": "Given a resourceGroupName, returns the list of all resources under it.",
				"operationId": "Resources_ListByResourceGroup",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "List of Resources under a specific ResourceGroup",
						"schema": {
							"$ref": "#/definitions/ResourceList"
						}
					}
				},
				"deprecated": false,
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/providers/{providerNamespace}/dataManagers": {
			"get": {
				"tags": ["Resources"],
				"summary": "Given a subscriptionId, returns all the list of resources under it.",
				"operationId": "Resources_ListBySubscription",
				"consumes": [],
				"produces": ["application/json", "text/json", "application/xml", "text/xml"],
				"parameters": [{
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "List of Resources under a specific Subscription",
						"schema": {
							"$ref": "#/definitions/ResourceList"
						}
					}
				},
				"deprecated": false,
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/dataManagers/{resourceName}": {
			"get": {
				"tags": ["Resources"],
				"summary": "Given the resource name returns the resource object.",
				"operationId": "Resources_GetByName",
				"consumes": [],
				"produces": ["application/json", "text/json"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Name of resource.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "Get Resource By Name",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					}
				},
				"deprecated": false
			},
			"put": {
				"tags": ["Resources"],
				"summary": "Create or update a StorSimple resource with the given parameters.",
				"operationId": "Resources_CreateOrUpdate",
				"consumes": ["application/json", "text/json", "application/x-www-form-urlencoded"],
				"produces": ["application/json", "text/json"],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Name of resource.",
					"required": true,
					"type": "string"
				}, {
					"name": "resource",
					"in": "body",
					"description": "Resource details from request body.",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Resource"
					}
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					},
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Resource"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Resources"],
				"summary": "Given a resourcename, deletes the resource object.",
				"operationId": "Resources_Delete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "resourceName",
					"in": "path",
					"description": "Name of resource.",
					"required": true,
					"type": "string"
				}, {
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/subscriptionIdParameter"
				}, {
					"$ref": "#/parameters/providerNamespaceParameter"
				}, {
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "Resource successfully deleted"
					},
					"204": {
						"description": "Resource to be deleted is already deleted"
					}
				},
				"deprecated": false
			}
		}
	},
	"definitions": {
		"DataServiceList": {
			"description": "Data Service Collection.",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DataService"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"DataService": {
			"description": "Data Service.",
			"type": "object",
			"properties": {
				"properties": {
					"$ref": "#/definitions/DataServiceProperties",
					"x-ms-client-flatten": true
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"DataServiceProperties": {
			"description": "Data Service properties.",
			"type": "object",
			"properties": {
				"state": {
					"description": "State of thedata service.\r\n            Supported Values Enabled|Disabled|Supported.",
					"enum": ["Disabled", "Enabled", "Supported"],
					"type": "string",
					"x-ms-enum": {
						"name": "State",
						"modelAsString": false
					}
				},
				"supportedDataSinkTypes": {
					"description": "Supported data store types which can be used as a sink.",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"supportedDataSourceTypes": {
					"description": "Supported data store types which can be used as a source.",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"DataStore": {
			"type": "object",
			"properties": {
				"properties": {
					"$ref": "#/definitions/DataStoreProperties",
					"x-ms-client-flatten": true
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"DataStoreProperties": {
			"description": "Data Store for sources and sinks",
			"type": "object",
			"properties": {
				"repositoryId": {
					"description": "Arm Id for the manager resource to which the data source is associated.\r\n            This is optional.",
					"type": "string"
				},
				"state": {
					"description": "State of the data source.\r\n            Supported Values Enabled|Disabled|Supported.",
					"enum": ["Disabled", "Enabled", "Supported"],
					"type": "string",
					"x-ms-enum": {
						"name": "State",
						"modelAsString": false
					}
				},
				"extendedProperty": {
					"$ref": "#/definitions/Object",
					"description": "A generic json used differently by each data source type."
				},
				"dataStoreTypeId": {
					"description": "The arm id of the data store type/",
					"type": "string"
				},
				"customerSecrets": {
					"description": "List of customer secrets containing a key identifier and key value.\r\n            The key identifier is a way for the specific data source to understand the key.\r\n            Value contains customer secret encrypted by the encryptionKeys",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerSecret"
					}
				}
			}
		},
		"Object": {
			"type": "object",
			"properties": {}
		},
		"CustomerSecret": {
			"description": "The pair of every customer secret which shall be passed explicitly by the portal",
			"type": "object",
			"properties": {
				"keyIdentifier": {
					"description": "The identifier to the data service input object which this secret corresponds to\r\n            Upto the data service and portal to form a way for identification",
					"type": "string"
				},
				"keyValue": {
					"description": "This shall contain the encrypted customer secret while being passed from the portal\r\n            and the key vault url before storing in DB",
					"type": "string"
				},
				"algorithm": {
					"description": "The encryption algorithm used to encrypt data",
					"enum": ["None", "RSA1_5", "RSA_OAEP"],
					"type": "string",
					"x-ms-enum": {
						"name": "SupportedAlgorithm",
						"modelAsString": false
					}
				}
			}
		},
		"DataStoreList": {
			"description": "Data Store Entity Collection",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DataStore"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"DataStoreTypeList": {
			"description": "Data Store Type Collection.",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DataStoreType"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"DataStoreType": {
			"description": "Data Store Type.",
			"type": "object",
			"properties": {
				"properties": {
					"$ref": "#/definitions/DataStoreTypeProperties",
					"x-ms-client-flatten": true
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"DataStoreTypeProperties": {
			"description": "Data Store Type properties.",
			"type": "object",
			"properties": {
				"repositoryType": {
					"description": "Arm type for the manager resource to which the data source type is associated.\r\n            This is optional.",
					"type": "string"
				},
				"state": {
					"description": "State of the data store type.\r\n            Supported Values Enabled|Disabled|Supported.",
					"enum": ["Disabled", "Enabled", "Supported"],
					"type": "string",
					"x-ms-enum": {
						"name": "State",
						"modelAsString": false
					}
				},
				"supportedDataServicesAsSink": {
					"description": "Supported data services where it can be used as a sink.",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"supportedDataServicesAsSource": {
					"description": "Supported data services where it can be used as a source.",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"JobDefinition": {
			"description": "Job Definition",
			"type": "object",
			"properties": {
				"properties": {
					"$ref": "#/definitions/JobDefinitionProperties",
					"x-ms-client-flatten": true
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"JobDefinitionProperties": {
			"description": "Job Definition",
			"type": "object",
			"properties": {
				"dataSourceId": {
					"description": "Data Source Id associated to the job definition.",
					"type": "string"
				},
				"dataSinkId": {
					"description": "Data Sink Id associated to the job definition.",
					"type": "string"
				},
				"schedules": {
					"$ref": "#/definitions/Schedule",
					"description": "Schedule for running the job definition"
				},
				"state": {
					"description": "State of the job definition.\r\n            Supported Values Enable|Disable.",
					"enum": ["Disabled", "Enabled", "Supported"],
					"type": "string",
					"x-ms-enum": {
						"name": "State",
						"modelAsString": false
					}
				},
				"lastModifiedTime": {
					"format": "date-time",
					"description": "Last modified time of the job definition.",
					"type": "string"
				},
				"userConfirmation": {
					"description": "Enum to detect if user confirmation is required",
					"enum": ["NotRequired", "Required"],
					"type": "string",
					"x-ms-enum": {
						"name": "UserConfirmation",
						"modelAsString": false
					}
				},
				"dataServiceInput": {
					"$ref": "#/definitions/Object",
					"description": "A generic json used differently by each data service type."
				},
				"customerSecrets": {
					"description": "List of customer secrets containing a key identifier and key value.\r\n            The key identifier is a way for the specific data source to understand the key.\r\n            Value contains customer secret encrypted by the encryptionKeys",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerSecret"
					}
				}
			}
		},
		"Schedule": {
			"type": "object",
			"properties": {}
		},
		"JobDefinitionList": {
			"description": "Job Definition Entity Collection",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/JobDefinition"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"JobDefinitionFilter": {
			"description": "Contains the supported job definition filters.",
			"type": "object",
			"properties": {
				"state": {
					"description": "The state of the job definition.",
					"enum": ["Disabled", "Enabled", "Supported"],
					"type": "string",
					"x-ms-enum": {
						"name": "State",
						"modelAsString": false
					}
				},
				"datasource": {
					"description": "The data source associated with the job definition",
					"type": "string"
				},
				"lastmodified": {
					"format": "date-time",
					"description": "The last modified date time of the data source.",
					"type": "string"
				}
			}
		},
		"RunParameters": {
			"type": "object",
			"properties": {
				"userConfirmation": {
					"description": "Enum to detect if user confirmation is required",
					"enum": ["NotRequired", "Required"],
					"type": "string",
					"x-ms-enum": {
						"name": "UserConfirmation",
						"modelAsString": false
					}
				},
				"dataServiceInput": {
					"$ref": "#/definitions/Object",
					"description": "A generic json used differently by each data service type."
				},
				"customerSecrets": {
					"description": "List of customer secrets containing a key identifier and key value.\r\n            The key identifier is a way for the specific data source to understand the key.\r\n            Value contains customer secret encrypted by the encryptionKeys",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerSecret"
					}
				}
			}
		},
		"JobList": {
			"description": "Job Entity Collection",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Job"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"Job": {
			"description": "Job",
			"type": "object",
			"properties": {
				"properties": {
					"$ref": "#/definitions/JobProperties",
					"x-ms-client-flatten": true
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"JobProperties": {
			"description": "Job Properties",
			"type": "object",
			"properties": {
				"jobStatus": {
					"description": "Status of the job, supported values Running | Succeeded | WaitingForAction | Failed | Cancelled | Cancelling | Aborted.",
					"enum": ["None", "InProgress", "Succeeded", "WaitingForAction", "Failed", "Cancelled", "Cancelling", "Aborted"],
					"type": "string",
					"x-ms-enum": {
						"name": "JobStatus",
						"modelAsString": false
					}
				},
				"startTime": {
					"format": "date-time",
					"description": "Time at which the job was started.",
					"type": "string"
				},
				"stoppedTime": {
					"format": "date-time",
					"description": "Time at which the job was stopped",
					"type": "string"
				},
				"isCancellable": {
					"description": "Boolean to mark is a job is cancellable",
					"type": "boolean"
				},
				"bytesProcessed": {
					"format": "int64",
					"description": "Number of bytes processed by the job as of now.",
					"type": "integer"
				},
				"itemsProcessed": {
					"format": "int64",
					"description": "Number of items processed by the job as of now",
					"type": "integer"
				},
				"totalBytesToProcess": {
					"format": "int64",
					"description": "Number of bytes to be processed by the job in total.",
					"type": "integer"
				},
				"totalItemsToProcess": {
					"format": "int64",
					"description": "Number of items to be processed by the job in total",
					"type": "integer"
				},
				"details": {
					"$ref": "#/definitions/JobDetails",
					"description": "Job Details\r\n            This field will only be sent for expand details filter."
				},
				"dataSourceName": {
					"description": "Name of the data source on which the job was triggered.",
					"type": "string"
				},
				"dataSinkName": {
					"description": "Name of the data sink on which the job was triggered.",
					"type": "string"
				}
			}
		},
		"JobDetails": {
			"type": "object",
			"properties": {
				"jobStages": {
					"description": "List of stages that ran in the job",
					"type": "array",
					"items": {
						"$ref": "#/definitions/JobStages"
					}
				},
				"jobDefinition": {
					"$ref": "#/definitions/JobDefinition",
					"description": "JobDefinition at the time of the run"
				},
				"errorDetails": {
					"description": "Error details for failure. This is optional.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorDetails"
					}
				},
				"itemDetailsLink": {
					"description": "Item Details Link to download files or see details",
					"type": "string"
				}
			}
		},
		"JobStages": {
			"type": "object",
			"properties": {
				"stageName": {
					"description": "Name of the job stage.",
					"type": "string"
				},
				"stageStatus": {
					"description": "Status of the job stage.",
					"enum": ["None", "InProgress", "Succeeded", "WaitingForAction", "Failed", "Cancelled", "Cancelling", "Aborted"],
					"type": "string",
					"x-ms-enum": {
						"name": "JobStatus",
						"modelAsString": false
					}
				},
				"jobStageDetails": {
					"$ref": "#/definitions/Object",
					"description": "Job Stage Details"
				},
				"errorDetails": {
					"description": "Error details for the stage. This is optional",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorDetails"
					}
				}
			}
		},
		"ErrorDetails": {
			"description": "Error Details",
			"type": "object",
			"properties": {
				"errorMessage": {
					"type": "string"
				},
				"errorCode": {
					"format": "int32",
					"type": "integer"
				},
				"recommendedAction": {
					"type": "string"
				},
				"exceptionMessage": {
					"description": "Contains the non localized exception message",
					"type": "string"
				}
			}
		},
		"JobFilter": {
			"description": "Contains the information about the filters for the job entity.",
			"type": "object",
			"properties": {
				"status": {
					"description": "The status of the job entity.",
					"enum": ["None", "InProgress", "Succeeded", "WaitingForAction", "Failed", "Cancelled", "Cancelling", "Aborted"],
					"type": "string",
					"x-ms-enum": {
						"name": "JobStatus",
						"modelAsString": false
					}
				},
				"startTime": {
					"format": "date-time",
					"description": "The start time of the job entity.",
					"type": "string"
				}
			}
		},
		"OperationList": {
			"description": "Operation Collection.",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Operation"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"Operation": {
			"type": "object",
			"properties": {
				"display": {
					"$ref": "#/definitions/OperationDisplay"
				},
				"properties": {
					"$ref": "#/definitions/OperationProperties",
					"x-ms-client-flatten": true
				},
				"origin": {
					"description": "Origin of the operation. Can be : user|system|user,system",
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"OperationDisplay": {
			"description": "Operation display",
			"type": "object",
			"properties": {
				"provider": {
					"description": "Provider name.",
					"type": "string"
				},
				"resource": {
					"description": "Resource name.",
					"type": "string"
				},
				"operation": {
					"description": "Localized name of the operation for display purpose.",
					"type": "string"
				},
				"description": {
					"description": "Localized description of the operation for display purpose.",
					"type": "string"
				}
			}
		},
		"OperationProperties": {
			"description": "Operation properties.",
			"type": "object",
			"properties": {}
		},
		"PublicKeyList": {
			"description": "PublicKey Entity Collection",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PublicKey"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"PublicKey": {
			"description": "public key",
			"type": "object",
			"properties": {
				"properties": {
					"$ref": "#/definitions/PublicKeyProperties",
					"x-ms-client-flatten": true
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PublicKeyProperties": {
			"description": "PublicKey Properties",
			"type": "object",
			"properties": {
				"dataServiceLevel1Key": {
					"$ref": "#/definitions/Key",
					"description": "Level one public key for encryption"
				},
				"dataServiceLevel2Key": {
					"$ref": "#/definitions/Key",
					"description": "Level two public key for encryption"
				}
			}
		},
		"Key": {
			"type": "object",
			"properties": {
				"keyModulus": {
					"description": "Modulus of the encryption key.",
					"type": "string"
				},
				"keyExponent": {
					"description": "Exponent of the encryption key.",
					"type": "string"
				},
				"encryptionChunkSizeInBytes": {
					"format": "int32",
					"description": "The maximum byte size that can be encrypted by the key.\r\n            For a key size larger than the size, break into chunks and encrypt each chunk\r\n            Append each encrypted chunk with : to mark the end of the chunk",
					"type": "integer"
				}
			}
		},
		"ResourceList": {
			"description": "Resource Entity Collection",
			"type": "object",
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Resource"
					}
				},
				"nextLink": {
					"type": "string"
				}
			}
		},
		"Resource": {
			"description": "Model of the Resource",
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		}
	},
	"parameters": {
		"subscriptionIdParameter": {
			"name": "subscriptionId",
			"in": "path",
			"description": "Subscription Id",
			"required": true,
			"type": "string"
		},
		"providerNamespaceParameter": {
			"name": "providerNamespace",
			"in": "path",
			"description": "The Provider Namespace",
			"required": true,
			"type": "string",
			"default": "Microsoft.HybridData"
		},
		"apiVersionParameter": {
			"name": "api-version",
			"in": "query",
			"description": "API Version",
			"required": true,
			"type": "string"
		}
	}
}